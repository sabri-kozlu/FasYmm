<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<local:ItemsPageBase x:ConnectionId='1'
    x:Class="WinUIFasYmmApp.ControlPages.ItemsViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WinUIFasYmmApp"
    xmlns:localcp="using:WinUIFasYmmApp.ControlPages">

    <local:ItemsPageBase.Resources>
        <DataTemplate x:Key="ImageTemplate"                                      >
            <ItemContainer x:ConnectionId='18' HorizontalAlignment="Left" Width="200" Height="140"                                           >
                <Image x:ConnectionId='19' Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"                                 Margin="4" AutomationProperties.AccessibilityView="Raw"/>
            </ItemContainer>
        </DataTemplate>

        <DataTemplate x:Key="LinedFlowLayoutItemTemplate"                                      >
            <ItemContainer x:ConnectionId='13'                                           >
                <Grid>
                    <Image x:ConnectionId='14'                                 Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="70"/>
                    <StackPanel Orientation="Vertical" Height="40" VerticalAlignment="Bottom" Padding="5,1,5,1" Background="{ThemeResource SystemControlBackgroundBaseMediumBrush}" Opacity=".75">
                        <TextBlock x:ConnectionId='15'                       Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:ConnectionId='16'                       Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/>
                            <TextBlock Text=" Likes" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </ItemContainer>
        </DataTemplate>

        <DataTemplate x:Key="StackLayoutItemTemplate"                                      >
            <ItemContainer x:ConnectionId='8'                                           >
                <RelativePanel Width="480" MinHeight="80" MaxHeight="100">
                    <Image x:ConnectionId='9' x:Name="image"
                        Width="24" Height="16"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Margin="0,4,0,0"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignTopWithPanel="True"
                                                       
                        Stretch="UniformToFill"/>
                    <TextBlock x:ConnectionId='10' x:Name="title" Style="{StaticResource BaseTextBlockStyle}" Margin="8,0,0,0"                      
                        RelativePanel.RightOf="image" RelativePanel.AlignTopWithPanel="True"/>
                    <TextBlock x:ConnectionId='11'                             Style="{StaticResource CaptionTextBlockStyle}" Margin="0,4,8,4"
                        RelativePanel.Below="title" TextWrapping="Wrap" TextTrimming="WordEllipsis"/>
                </RelativePanel>
            </ItemContainer>
        </DataTemplate>

        <DataTemplate x:Key="UniformGridLayoutItemTemplate"                                      >
            <ItemContainer x:ConnectionId='3'                                           >
                <Grid Width="150">
                    <Image x:ConnectionId='4'                                 Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <StackPanel Orientation="Vertical" Height="40" VerticalAlignment="Bottom" Padding="5,1,5,1" Background="{ThemeResource SystemControlBackgroundBaseMediumBrush}" Opacity=".75">
                        <TextBlock x:ConnectionId='5'                       Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:ConnectionId='6'                       Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/>
                            <TextBlock Text=" Likes" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </ItemContainer>
        </DataTemplate>
    </local:ItemsPageBase.Resources>

    <StackPanel>
        <local:ControlExample x:ConnectionId='20' x:Name="Example1" HeaderText="Basic ItemsView">
            <StackPanel>
                <TextBlock Margin="0,0,0,15">
                    This is a basic ItemsView which uses its default StackLayout layout and a simple ItemTemplate.<LineBreak/>Hit the Enter key, double-click or double-tap an item to invoke it.
                </TextBlock>
                <ItemsView x:ConnectionId='45'
                    x:Name="BasicItemsView"
                    Width="220" Height="400" HorizontalAlignment="Left"
                    ItemTemplate="{StaticResource ImageTemplate}"
                    IsItemInvokedEnabled="True"
                                                            />
                <TextBlock x:ConnectionId='46' x:Name="tblBasicInvokeOutput" Style="{StaticResource OutputTextBlockStyle}"/>
            </StackPanel>
            
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;DataTemplate x:Key="ImageTemplate" x:DataType="localcp:CustomDataObject"&gt;
    &lt;ItemContainer HorizontalAlignment="Left" Width="200" Height="140" AutomationProperties.Name="{x:Bind Title}"&gt;
        &lt;Image Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{x:Bind ImageLocation}" Margin="4" AutomationProperties.AccessibilityView="Raw"/&gt;
    &lt;/ItemContainer&gt;
&lt;/DataTemplate&gt;

&lt;ItemsView Width="220" Height="400" HorizontalAlignment="Left"
    ItemTemplate="{StaticResource ImageTemplate}" IsItemInvokedEnabled="True" ItemInvoked="BasicItemsView_ItemInvoked"/&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
private void BasicItemsView_ItemInvoked(ItemsView sender, ItemsViewItemInvokedEventArgs e)
{
    tblBasicInvokeOutput.Text = "You invoked " + (e.InvokedItem as CustomDataObject).Title + ".";
}
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>

        <local:ControlExample x:ConnectionId='21' x:Name="Example2" HeaderText="ItemsView with swappable layouts">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Margin="0,0,0,15">
                    Use the options on the right to control different layout customizations to the ItemsView below.
                </TextBlock>
                <ItemsView x:ConnectionId='30' x:Name="SwappableLayoutsItemsView"
                    Width="500" Height="400" HorizontalAlignment="Left"
                    ItemTemplate="{StaticResource LinedFlowLayoutItemTemplate}">
                    <ItemsView.Layout>
                        <LinedFlowLayout ItemsStretch="Fill" LineHeight="160" LineSpacing="5" MinItemSpacing="5"/>
                    </ItemsView.Layout>
                </ItemsView>
            </StackPanel>
            
            <local:ControlExample.Options>
                <StackPanel MinWidth="300">
                    <StackPanel.Resources>
                        <Style x:Key="DefaultNumberBoxStyle" TargetType="NumberBox">
                            <Setter Property="SpinButtonPlacementMode" Value="Inline"/>
                            <Setter Property="SmallChange" Value="1"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="MaxWidth" Value="250"/>
                            <Setter Property="Margin" Value="0,0,0,16"/>
                        </Style>
                    </StackPanel.Resources>

                    <RadioButtons Header="Layout" FontWeight="SemiBold">
                        <RadioButton x:ConnectionId='42'
                                                      
                            Content="LinedFlowLayout"
                            GroupName="ItemsViewLayouts"
                            FontWeight="Normal"
                            IsChecked="True"/>

                        <RadioButton x:ConnectionId='43'
                                                      
                            Content="UniformGridLayout"
                            GroupName="ItemsViewLayouts"
                            FontWeight="Normal"/>

                        <RadioButton x:ConnectionId='44'
                                                      
                            Content="StackLayout"
                            GroupName="ItemsViewLayouts"
                            FontWeight="Normal"/>
                    </RadioButtons>

                    <StackPanel x:ConnectionId='31' x:Name="spLinedFlowLayoutOptions" MinHeight="300">
                        <TextBlock Margin="0,15,0,10" Text="LinedFlowLayout settings" FontWeight="SemiBold"/>

                        <NumberBox x:ConnectionId='38' x:Name="nbLineSpacing" Minimum="0" Maximum="100" Value="5"
                            Header="Space between lines" AutomationProperties.Name="Space between lines"
                            Style="{ThemeResource DefaultNumberBoxStyle}"                                                     />

                        <NumberBox x:ConnectionId='39' x:Name="nbMinItemSpacing" Minimum="0" Maximum="100" Value="5"
                            Header="Minimum space between items on a line" AutomationProperties.Name="Minimum space between items on a line"
                            Style="{ThemeResource DefaultNumberBoxStyle}"                                                     />

                        <RadioButtons Header="Line height">
                            <RadioButton x:ConnectionId='40' x:Name="rbSmallLineHeight"
                                                              
                                Content="Small"
                                GroupName="LinedFlowLayoutLineHeights"/>

                            <RadioButton x:ConnectionId='41' x:Name="rbLargeLineHeight"
                                                              
                                Content="Large"
                                GroupName="LinedFlowLayoutLineHeights"
                                IsChecked="True"/>
                        </RadioButtons>
                    </StackPanel>

                    <StackPanel x:ConnectionId='32' x:Name="spStackLayoutOptions" MinHeight="300" Visibility="Collapsed">
                        <TextBlock Margin="0,15,0,10" Text="StackLayout settings" FontWeight="SemiBold"/>

                        <NumberBox x:ConnectionId='37' x:Name="nbSpacing" Minimum="0" Maximum="100" Value="5"
                            Header="Space between rows" AutomationProperties.Name="Space between rows"
                            Style="{ThemeResource DefaultNumberBoxStyle}"                                                 />
                    </StackPanel>

                    <StackPanel x:ConnectionId='33' x:Name="spUniformGridLayoutOptions" MinHeight="300" Visibility="Collapsed">
                        <TextBlock Margin="0,15,0,10" Text="UniformGridLayout settings" FontWeight="SemiBold"/>

                        <NumberBox x:ConnectionId='34' x:Name="nbMinColumnSpacing" Minimum="0" Maximum="100" Value="5"
                            Header="Minimum space between columns" AutomationProperties.Name="Minimum space between columns"
                            Style="{ThemeResource DefaultNumberBoxStyle}"                                                       />

                        <NumberBox x:ConnectionId='35' x:Name="nbMinRowSpacing" Minimum="0" Maximum="100" Value="5"
                            Header="Minimum space between rows" AutomationProperties.Name="Minimum space between rows"
                            Style="{ThemeResource DefaultNumberBoxStyle}"                                                       />

                        <NumberBox x:ConnectionId='36' x:Name="nbMaximumRowsOrColumns" Minimum="1" Maximum="8" Value="3"
                            Header="Maximum number of items per row before wrapping"
                            AutomationProperties.Name="Maximum number of items per row before wrapping"
                            Style="{ThemeResource DefaultNumberBoxStyle}"                                                       />
                    </StackPanel>
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;DataTemplate x:Key="LinedFlowLayoutItemTemplate" x:DataType="localcp:CustomDataObject"&gt;
    &lt;ItemContainer AutomationProperties.Name="{x:Bind Title}"&gt;
        &lt;Grid&gt;
            &lt;Image Source="{x:Bind ImageLocation}" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="70"/&gt;
            &lt;StackPanel Orientation="Vertical" Height="40" VerticalAlignment="Bottom" Padding="5,1,5,1" Background="{ThemeResource SystemControlBackgroundBaseMediumBrush}" Opacity=".75"&gt;
                &lt;TextBlock Text="{x:Bind Title}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/&gt;
                &lt;StackPanel Orientation="Horizontal"&gt;
                    &lt;TextBlock Text="{x:Bind Likes}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/&gt;
                    &lt;TextBlock Text=" Likes" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/&gt;
                &lt;/StackPanel&gt;
            &lt;/StackPanel&gt;
        &lt;/Grid&gt;
    &lt;/ItemContainer&gt;
&lt;/DataTemplate&gt;

&lt;ItemsView Width="500" Height="400" HorizontalAlignment="Left"
    ItemTemplate="{StaticResource LinedFlowLayoutItemTemplate}"&gt;
    &lt;ItemsView.Layout&gt;
        &lt;LinedFlowLayout ItemsStretch="Fill" LineHeight="160" LineSpacing="5" MinItemSpacing="5"/&gt;
    &lt;/ItemsView.Layout&gt;
&lt;/ItemsView&gt;
                </x:String> 
            </local:ControlExample.Xaml>            
        </local:ControlExample>
        
        <local:ControlExample x:ConnectionId='22' x:Name="Example3" HeaderText="ItemsView item invocation and selection">
            <Grid RowDefinitions="Auto, *, Auto">
                <RichTextBlock TextWrapping="Wrap" Margin="0,0,0,15">
                    <Paragraph>You can enable four different selection modes on the right.</Paragraph>
                    <Paragraph>
                        <Bold>None</Bold> disables selection all together.
                    </Paragraph>
                    <Paragraph>
                        <Bold>Single</Bold> allows for only one item to be selected in the collection.
                    </Paragraph>
                    <Paragraph>
                        <Bold>Multiple</Bold> causes checkboxes to appear within the items, so that multiple items can be chosen from the collection.
                    </Paragraph>
                    <Paragraph>
                        <Bold>Extended</Bold> allows the user to select multiple items by using Ctrl+Click to select the individual items they want, or Shift+Click to select a range of contiguous items.
                    </Paragraph>
                </RichTextBlock>

                <ItemsView x:ConnectionId='23' x:Name="SwappableSelectionModesItemsView" Grid.Row="1" SelectionMode="Multiple"
                    Width="500" Height="400" HorizontalAlignment="Left"
                    ItemTemplate="{StaticResource UniformGridLayoutItemTemplate}"
                                                                              
                                                                                        >
                    <ItemsView.Layout>
                        <UniformGridLayout MinRowSpacing="5" MinColumnSpacing="5" MaximumRowsOrColumns="3"/>
                    </ItemsView.Layout>
                </ItemsView>

                <StackPanel Grid.Row="2">
                    <TextBlock x:ConnectionId='24' x:Name="tblInvocationOutput" Style="{StaticResource OutputTextBlockStyle}" />
                    <TextBlock x:ConnectionId='25' x:Name="tblSelectionOutput" Style="{StaticResource OutputTextBlockStyle}" />
                </StackPanel>
            </Grid>

            <local:ControlExample.Options>
                <Grid MinWidth="200"
                    RowDefinitions="Auto, Auto"
                    ColumnDefinitions="Auto, *">
                    <TextBlock Text="SelectionMode" VerticalAlignment="Center" Margin="0,0,10,0"/>

                    <ComboBox x:ConnectionId='26' x:Name="cmbSelectionMode" Grid.Column="1" SelectedIndex="2"
                        HorizontalAlignment="Stretch" AutomationProperties.Name="selection mode"
                                                                            >
                        <ComboBoxItem>None</ComboBoxItem>
                        <ComboBoxItem>Single</ComboBoxItem>
                        <ComboBoxItem>Multiple</ComboBoxItem>
                        <ComboBoxItem>Extended</ComboBoxItem>
                    </ComboBox>
                    
                    <TextBlock Text="IsItemInvokedEnabled" Grid.Row="1" VerticalAlignment="Center" Margin="0,0,10,0"/>

                    <CheckBox x:ConnectionId='27' x:Name="chkIsItemInvokedEnabled"
                        Grid.Row="1" Grid.Column="1"
                        AutomationProperties.Name="is item invocation enabled?"
                                                                          
                                                                            />
                </Grid>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;DataTemplate x:Key="UniformGridLayoutItemTemplate" x:DataType="localcp:CustomDataObject"&gt;
    &lt;ItemContainer AutomationProperties.Name="{x:Bind Title}"&gt;
        &lt;Grid Width="150"&gt;
            &lt;Image Source="{x:Bind ImageLocation}" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center"/&gt;
            &lt;StackPanel Orientation="Vertical" Height="40" VerticalAlignment="Bottom" Padding="5,1,5,1" Background="{ThemeResource SystemControlBackgroundBaseMediumBrush}" Opacity=".75"&gt;
                &lt;TextBlock Text="{x:Bind Title}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/&gt;
                &lt;StackPanel Orientation="Horizontal"&gt;
                    &lt;TextBlock Text="{x:Bind Likes}" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/&gt;
                    &lt;TextBlock Text=" Likes" Style="{ThemeResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"/&gt;
                &lt;/StackPanel&gt;
            &lt;/StackPanel&gt;
        &lt;/Grid&gt;
    &lt;/ItemContainer&gt;
&lt;/DataTemplate&gt;

&lt;ItemsView Width="500" Height="400" HorizontalAlignment="Left"
    SelectionMode="$(SelectionMode)"
    IsItemInvokedEnabled="$(IsItemInvokedEnabled)"
    ItemTemplate="{StaticResource UniformGridLayoutItemTemplate}"
    ItemInvoked="SwappableSelectionModesItemsView_ItemInvoked"
    SelectionChanged="SwappableSelectionModesItemsView_SelectionChanged"&gt;
    &lt;ItemsView.Layout&gt;
        &lt;UniformGridLayout MinRowSpacing="5" MinColumnSpacing="5" MaximumRowsOrColumns="3"/&gt;
    &lt;/ItemsView.Layout&gt;
&lt;/ItemsView&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
private void SwappableSelectionModesItemsView_ItemInvoked(ItemsView sender, ItemsViewItemInvokedEventArgs e)
{
    tblInvocationOutput.Text = "You invoked " + (e.InvokedItem as CustomDataObject).Title + ".";
}

private void SwappableSelectionModesItemsView_SelectionChanged(ItemsView sender, ItemsViewSelectionChangedEventArgs e)
{
    tblSelectionOutput.Text = string.Format("You have selected {0} item(s).", SwappableSelectionModesItemsView.SelectedItems.Count);
}
                </x:String>
            </local:ControlExample.CSharp>

            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution x:ConnectionId='28' Key="SelectionMode"                                                                                    />
                <local:ControlExampleSubstitution x:ConnectionId='29' Key="IsItemInvokedEnabled"                                                                />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
    </StackPanel>
</local:ItemsPageBase>

