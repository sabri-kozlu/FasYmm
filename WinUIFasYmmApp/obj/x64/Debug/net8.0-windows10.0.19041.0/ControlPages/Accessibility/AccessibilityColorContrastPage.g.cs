#pragma checksum "C:\Users\Sa\Desktop\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\Accessibility\AccessibilityColorContrastPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "BBF87FF758A97E2ED3051EF7F04468D4B98EC1B22A8E7D448925AC49A84F31F6"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class AccessibilityColorContrastPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Panel_Background(global::Microsoft.UI.Xaml.Controls.Panel obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Foreground(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_IconElement_Foreground(global::Microsoft.UI.Xaml.Controls.IconElement obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Microsoft_UI_Xaml_Shapes_Shape_Fill(global::Microsoft.UI.Xaml.Shapes.Shape obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class AccessibilityColorContrastPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAccessibilityColorContrastPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.AccessibilityColorContrastPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Grid obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj6;
            private global::Microsoft.UI.Xaml.Controls.FontIcon obj7;
            private global::Microsoft.UI.Xaml.Shapes.Rectangle obj8;
            private global::Microsoft.UI.Xaml.Shapes.Rectangle obj9;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj10;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5BackgroundDisabled = false;
            private static bool isobj6ForegroundDisabled = false;
            private static bool isobj7ForegroundDisabled = false;
            private static bool isobj8FillDisabled = false;
            private static bool isobj9FillDisabled = false;
            private static bool isobj10ForegroundDisabled = false;
            private static bool isobj11ForegroundDisabled = false;

            private AccessibilityColorContrastPage_obj1_BindingsTracking bindingsTracking;

            public AccessibilityColorContrastPage_obj1_Bindings()
            {
                this.bindingsTracking = new AccessibilityColorContrastPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 231 && columnNumber == 25)
                {
                    isobj5BackgroundDisabled = true;
                }
                else if (lineNumber == 241 && columnNumber == 29)
                {
                    isobj6ForegroundDisabled = true;
                }
                else if (lineNumber == 292 && columnNumber == 33)
                {
                    isobj7ForegroundDisabled = true;
                }
                else if (lineNumber == 279 && columnNumber == 37)
                {
                    isobj8FillDisabled = true;
                }
                else if (lineNumber == 269 && columnNumber == 37)
                {
                    isobj9FillDisabled = true;
                }
                else if (lineNumber == 251 && columnNumber == 33)
                {
                    isobj10ForegroundDisabled = true;
                }
                else if (lineNumber == 255 && columnNumber == 33)
                {
                    isobj11ForegroundDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 228
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                        break;
                    case 6: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 238
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 7: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 290
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                        break;
                    case 8: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 276
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                        break;
                    case 9: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 266
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Rectangle>(target);
                        break;
                    case 10: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 248
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 11: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 253
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAccessibilityColorContrastPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.AccessibilityColorContrastPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.AccessibilityColorContrastPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_BackgroundColorPicker(obj.BackgroundColorPicker, phase);
                        this.Update_TextColorPicker(obj.TextColorPicker, phase);
                    }
                }
            }
            private void Update_BackgroundColorPicker(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_BackgroundColorPicker(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_BackgroundColorPicker_ColorBrush(obj.ColorBrush, phase);
                    }
                }
            }
            private void Update_BackgroundColorPicker_ColorBrush(global::Microsoft.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 228
                    if (!isobj5BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Panel_Background(this.obj5, obj, null);
                    }
                }
            }
            private void Update_TextColorPicker(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_TextColorPicker(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TextColorPicker_ColorBrush(obj.ColorBrush, phase);
                    }
                }
            }
            private void Update_TextColorPicker_ColorBrush(global::Microsoft.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 238
                    if (!isobj6ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Foreground(this.obj6, obj, null);
                    }
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 290
                    if (!isobj7ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_IconElement_Foreground(this.obj7, obj, null);
                    }
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 276
                    if (!isobj8FillDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Shapes_Shape_Fill(this.obj8, obj, null);
                    }
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 266
                    if (!isobj9FillDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Shapes_Shape_Fill(this.obj9, obj, null);
                    }
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 248
                    if (!isobj10ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Foreground(this.obj10, obj, null);
                    }
                    // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 253
                    if (!isobj11ForegroundDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Foreground(this.obj11, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccessibilityColorContrastPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AccessibilityColorContrastPage_obj1_Bindings> weakRefToBindingObj; 

                public AccessibilityColorContrastPage_obj1_BindingsTracking(AccessibilityColorContrastPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccessibilityColorContrastPage_obj1_Bindings>(obj);
                }

                public AccessibilityColorContrastPage_obj1_Bindings TryGetBindingObject()
                {
                    AccessibilityColorContrastPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_BackgroundColorPicker(null);
                    UpdateChildListeners_TextColorPicker(null);
                }

                public void DependencyPropertyChanged_BackgroundColorPicker_ColorBrush(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    AccessibilityColorContrastPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker obj = sender as global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker;
                        if (obj != null)
                        {
                            bindings.Update_BackgroundColorPicker_ColorBrush(obj.ColorBrush, DATA_CHANGED);
                        }
                    }
                }
                private global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker cache_BackgroundColorPicker = null;
                private long tokenDPC_BackgroundColorPicker_ColorBrush = 0;
                public void UpdateChildListeners_BackgroundColorPicker(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker obj)
                {
                    if (obj != cache_BackgroundColorPicker)
                    {
                        if (cache_BackgroundColorPicker != null)
                        {
                            cache_BackgroundColorPicker.UnregisterPropertyChangedCallback(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker.ColorBrushProperty, tokenDPC_BackgroundColorPicker_ColorBrush);
                            cache_BackgroundColorPicker = null;
                        }
                        if (obj != null)
                        {
                            cache_BackgroundColorPicker = obj;
                            tokenDPC_BackgroundColorPicker_ColorBrush = obj.RegisterPropertyChangedCallback(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker.ColorBrushProperty, DependencyPropertyChanged_BackgroundColorPicker_ColorBrush);
                        }
                    }
                }
                public void DependencyPropertyChanged_TextColorPicker_ColorBrush(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    AccessibilityColorContrastPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker obj = sender as global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker;
                        if (obj != null)
                        {
                            bindings.Update_TextColorPicker_ColorBrush(obj.ColorBrush, DATA_CHANGED);
                        }
                    }
                }
                private global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker cache_TextColorPicker = null;
                private long tokenDPC_TextColorPicker_ColorBrush = 0;
                public void UpdateChildListeners_TextColorPicker(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker obj)
                {
                    if (obj != cache_TextColorPicker)
                    {
                        if (cache_TextColorPicker != null)
                        {
                            cache_TextColorPicker.UnregisterPropertyChangedCallback(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker.ColorBrushProperty, tokenDPC_TextColorPicker_ColorBrush);
                            cache_TextColorPicker = null;
                        }
                        if (obj != null)
                        {
                            cache_TextColorPicker = obj;
                            tokenDPC_TextColorPicker_ColorBrush = obj.RegisterPropertyChangedCallback(global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker.ColorBrushProperty, DependencyPropertyChanged_TextColorPicker_ColorBrush);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 84
                {
                    this.TextColorPicker = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker>(target);
                    ((global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker)this.TextColorPicker).ColorChanged += this.TextColorPicker_ColorChanged;
                }
                break;
            case 3: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 92
                {
                    this.BackgroundColorPicker = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker>(target);
                    ((global::WinUIFasYmmApp.DesktopWap.Controls.InlineColorPicker)this.BackgroundColorPicker).ColorChanged += this.BackgroundColorPicker_ColorChanged;
                }
                break;
            case 4: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 106
                {
                    this.ContrastRatioPresenter = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 12: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 154
                {
                    this.NormalTextCheckResult = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 13: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 180
                {
                    this.LargeTextCheckResult = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 14: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 209
                {
                    this.ComponentsCheckResult = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 15: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 198
                {
                    this.ComponentsCheckEllipse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                }
                break;
            case 16: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 204
                {
                    this.ComponentsCheckIcon = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                }
                break;
            case 17: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 170
                {
                    this.LargeTextCheckEllipse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                }
                break;
            case 18: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 175
                {
                    this.LargeTextCheckIcon = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                }
                break;
            case 19: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 144
                {
                    this.NormalTextCheckEllipse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Shapes.Ellipse>(target);
                }
                break;
            case 20: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 149
                {
                    this.NormalTextCheckIcon = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\Accessibility\AccessibilityColorContrastPage.xaml line 12
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    AccessibilityColorContrastPage_obj1_Bindings bindings = new AccessibilityColorContrastPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

