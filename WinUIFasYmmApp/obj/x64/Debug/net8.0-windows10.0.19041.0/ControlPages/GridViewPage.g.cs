#pragma checksum "C:\Users\Sa\Desktop\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\GridViewPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "70292D3F866029A85CD213BEA28324781497746E4649085A00B18813920500CA"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class GridViewPage : 
        global::WinUIFasYmmApp.ItemsPageBase, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ListViewBase_CanDragItems(global::Microsoft.UI.Xaml.Controls.ListViewBase obj, global::System.Boolean value)
            {
                obj.CanDragItems = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ListViewBase_CanReorderItems(global::Microsoft.UI.Xaml.Controls.ListViewBase obj, global::System.Boolean value)
            {
                obj.CanReorderItems = value;
            }
            public static void Set_Microsoft_UI_Xaml_UIElement_AllowDrop(global::Microsoft.UI.Xaml.UIElement obj, global::System.Boolean value)
            {
                obj.AllowDrop = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ListViewBase_IsItemClickEnabled(global::Microsoft.UI.Xaml.Controls.ListViewBase obj, global::System.Boolean value)
            {
                obj.IsItemClickEnabled = value;
            }
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name(global::Microsoft.UI.Xaml.DependencyObject obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                global::Microsoft.UI.Xaml.Automation.AutomationProperties.SetName(obj, value);
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class GridViewPage_obj3_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.CustomDataObject dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Microsoft.UI.Xaml.Controls.Image obj4;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj6;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3NameDisabled = false;
            private static bool isobj4SourceDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj6TextDisabled = false;

            public GridViewPage_obj3_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 68 && columnNumber == 31)
                {
                    isobj3NameDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 24)
                {
                    isobj4SourceDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 32)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 36)
                {
                    isobj6TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // ControlPages\GridViewPage.xaml line 68
                        this.obj3 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target));
                        break;
                    case 4: // ControlPages\GridViewPage.xaml line 69
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 5: // ControlPages\GridViewPage.xaml line 71
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 6: // ControlPages\GridViewPage.xaml line 73
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj3.Target as global::Microsoft.UI.Xaml.Controls.Grid);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.CustomDataObject obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                        this.Update_ImageLocation(obj.ImageLocation, phase);
                        this.Update_Likes(obj.Likes, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 68
                    if (!isobj3NameDisabled)
                    {
                        if ((this.obj3.Target as global::Microsoft.UI.Xaml.Controls.Grid) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name((this.obj3.Target as global::Microsoft.UI.Xaml.Controls.Grid), obj, null);
                        }
                    }
                    // ControlPages\GridViewPage.xaml line 71
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_ImageLocation(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 69
                    if (!isobj4SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj4, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_Likes(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 73
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class GridViewPage_obj8_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.CustomDataObject dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj8;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9TextDisabled = false;

            public GridViewPage_obj8_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 63 && columnNumber == 90)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // ControlPages\GridViewPage.xaml line 62
                        this.obj8 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target));
                        break;
                    case 9: // ControlPages\GridViewPage.xaml line 63
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj8.Target as global::Microsoft.UI.Xaml.Controls.StackPanel);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.CustomDataObject obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 63
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class GridViewPage_obj11_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.CustomDataObject dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj11;
            private global::Microsoft.UI.Xaml.Controls.Image obj12;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj13;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj14;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj15;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj11NameDisabled = false;
            private static bool isobj12SourceDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15TextDisabled = false;

            public GridViewPage_obj11_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 41 && columnNumber == 19)
                {
                    isobj11NameDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 24)
                {
                    isobj12SourceDisabled = true;
                }
                else if (lineNumber == 48 && columnNumber == 32)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 36)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 36)
                {
                    isobj15TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // ControlPages\GridViewPage.xaml line 41
                        this.obj11 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target));
                        break;
                    case 12: // ControlPages\GridViewPage.xaml line 46
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 13: // ControlPages\GridViewPage.xaml line 48
                        this.obj13 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 14: // ControlPages\GridViewPage.xaml line 54
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 15: // ControlPages\GridViewPage.xaml line 50
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj11.Target as global::Microsoft.UI.Xaml.Controls.Grid);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.CustomDataObject obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                        this.Update_ImageLocation(obj.ImageLocation, phase);
                        this.Update_Likes(obj.Likes, phase);
                        this.Update_Views(obj.Views, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 41
                    if (!isobj11NameDisabled)
                    {
                        if ((this.obj11.Target as global::Microsoft.UI.Xaml.Controls.Grid) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name((this.obj11.Target as global::Microsoft.UI.Xaml.Controls.Grid), obj, null);
                        }
                    }
                    // ControlPages\GridViewPage.xaml line 48
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_ImageLocation(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 46
                    if (!isobj12SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj12, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_Likes(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 54
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_Views(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 50
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj15, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class GridViewPage_obj17_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.CustomDataObject dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj17;
            private global::Microsoft.UI.Xaml.Controls.Image obj18;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj19;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj20;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj17NameDisabled = false;
            private static bool isobj18SourceDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj20TextDisabled = false;

            public GridViewPage_obj17_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 25 && columnNumber == 28)
                {
                    isobj17NameDisabled = true;
                }
                else if (lineNumber == 31 && columnNumber == 24)
                {
                    isobj18SourceDisabled = true;
                }
                else if (lineNumber == 33 && columnNumber == 104)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 35 && columnNumber == 28)
                {
                    isobj20TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 17: // ControlPages\GridViewPage.xaml line 25
                        this.obj17 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RelativePanel>(target));
                        break;
                    case 18: // ControlPages\GridViewPage.xaml line 26
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 19: // ControlPages\GridViewPage.xaml line 33
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 20: // ControlPages\GridViewPage.xaml line 35
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj17.Target as global::Microsoft.UI.Xaml.Controls.RelativePanel);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.CustomDataObject obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Title(obj.Title, phase);
                        this.Update_ImageLocation(obj.ImageLocation, phase);
                        this.Update_Description(obj.Description, phase);
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 25
                    if (!isobj17NameDisabled)
                    {
                        if ((this.obj17.Target as global::Microsoft.UI.Xaml.Controls.RelativePanel) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name((this.obj17.Target as global::Microsoft.UI.Xaml.Controls.RelativePanel), obj, null);
                        }
                    }
                    // ControlPages\GridViewPage.xaml line 33
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ImageLocation(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 26
                    if (!isobj18SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj18, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_Description(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 35
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class GridViewPage_obj22_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.CustomDataObject dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj22;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj22SourceDisabled = false;
            private static bool isobj22NameDisabled = false;

            public GridViewPage_obj22_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 21 && columnNumber == 44)
                {
                    isobj22SourceDisabled = true;
                }
                else if (lineNumber == 21 && columnNumber == 76)
                {
                    isobj22NameDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 22: // ControlPages\GridViewPage.xaml line 21
                        this.obj22 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target));
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj22.Target as global::Microsoft.UI.Xaml.Controls.Image);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CustomDataObject>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.CustomDataObject obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ImageLocation(obj.ImageLocation, phase);
                        this.Update_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_ImageLocation(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 21
                    if (!isobj22SourceDisabled)
                    {
                        if ((this.obj22.Target as global::Microsoft.UI.Xaml.Controls.Image) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source((this.obj22.Target as global::Microsoft.UI.Xaml.Controls.Image), (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                        }
                    }
                }
            }
            private void Update_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 21
                    if (!isobj22NameDisabled)
                    {
                        if ((this.obj22.Target as global::Microsoft.UI.Xaml.Controls.Image) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Automation_AutomationProperties_Name((this.obj22.Target as global::Microsoft.UI.Xaml.Controls.Image), obj, null);
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class GridViewPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IGridViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.GridViewPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.GridView obj23;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj38;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj39;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj40;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj41;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj42;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj43;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj50;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj51;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj52;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj23CanDragItemsDisabled = false;
            private static bool isobj23CanReorderItemsDisabled = false;
            private static bool isobj23AllowDropDisabled = false;
            private static bool isobj23IsItemClickEnabledDisabled = false;
            private static bool isobj38ValueDisabled = false;
            private static bool isobj39ValueDisabled = false;
            private static bool isobj40ValueDisabled = false;
            private static bool isobj41ValueDisabled = false;
            private static bool isobj42ValueDisabled = false;
            private static bool isobj43ValueDisabled = false;
            private static bool isobj50ValueDisabled = false;
            private static bool isobj51ValueDisabled = false;
            private static bool isobj52ValueDisabled = false;

            private GridViewPage_obj1_BindingsTracking bindingsTracking;

            public GridViewPage_obj1_Bindings()
            {
                this.bindingsTracking = new GridViewPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 212 && columnNumber == 21)
                {
                    isobj23CanDragItemsDisabled = true;
                }
                else if (lineNumber == 213 && columnNumber == 21)
                {
                    isobj23CanReorderItemsDisabled = true;
                }
                else if (lineNumber == 214 && columnNumber == 21)
                {
                    isobj23AllowDropDisabled = true;
                }
                else if (lineNumber == 215 && columnNumber == 21)
                {
                    isobj23IsItemClickEnabledDisabled = true;
                }
                else if (lineNumber == 302 && columnNumber == 76)
                {
                    isobj38ValueDisabled = true;
                }
                else if (lineNumber == 303 && columnNumber == 70)
                {
                    isobj39ValueDisabled = true;
                }
                else if (lineNumber == 304 && columnNumber == 70)
                {
                    isobj40ValueDisabled = true;
                }
                else if (lineNumber == 305 && columnNumber == 73)
                {
                    isobj41ValueDisabled = true;
                }
                else if (lineNumber == 306 && columnNumber == 71)
                {
                    isobj42ValueDisabled = true;
                }
                else if (lineNumber == 307 && columnNumber == 71)
                {
                    isobj43ValueDisabled = true;
                }
                else if (lineNumber == 197 && columnNumber == 67)
                {
                    isobj50ValueDisabled = true;
                }
                else if (lineNumber == 198 && columnNumber == 67)
                {
                    isobj51ValueDisabled = true;
                }
                else if (lineNumber == 199 && columnNumber == 66)
                {
                    isobj52ValueDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 23: // ControlPages\GridViewPage.xaml line 210
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                        break;
                    case 38: // ControlPages\GridViewPage.xaml line 302
                        this.obj38 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 39: // ControlPages\GridViewPage.xaml line 303
                        this.obj39 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 40: // ControlPages\GridViewPage.xaml line 304
                        this.obj40 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 41: // ControlPages\GridViewPage.xaml line 305
                        this.obj41 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 42: // ControlPages\GridViewPage.xaml line 306
                        this.obj42 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 43: // ControlPages\GridViewPage.xaml line 307
                        this.obj43 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 50: // ControlPages\GridViewPage.xaml line 197
                        this.obj50 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 51: // ControlPages\GridViewPage.xaml line 198
                        this.obj51 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 52: // ControlPages\GridViewPage.xaml line 199
                        this.obj52 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IGridViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.GridViewPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.GridViewPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DragCheckBox(obj.DragCheckBox, phase);
                        this.Update_ReorderCheckBox(obj.ReorderCheckBox, phase);
                        this.Update_DropCheckBox(obj.DropCheckBox, phase);
                        this.Update_ItemClickCheckBox(obj.ItemClickCheckBox, phase);
                        this.Update_ContentGridView(obj.ContentGridView, phase);
                        this.Update_ColumnSpace(obj.ColumnSpace, phase);
                        this.Update_RowSpace(obj.RowSpace, phase);
                        this.Update_WrapItemCount(obj.WrapItemCount, phase);
                    }
                }
            }
            private void Update_DragCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_DragCheckBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DragCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_DragCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DragCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_DragCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 210
                    if (!isobj23CanDragItemsDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ListViewBase_CanDragItems(this.obj23, obj);
                    }
                }
            }
            private void Update_ReorderCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ReorderCheckBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ReorderCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_ReorderCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ReorderCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ReorderCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 210
                    if (!isobj23CanReorderItemsDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ListViewBase_CanReorderItems(this.obj23, obj);
                    }
                }
            }
            private void Update_DropCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_DropCheckBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DropCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_DropCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_DropCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_DropCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 210
                    if (!isobj23AllowDropDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_AllowDrop(this.obj23, obj);
                    }
                }
            }
            private void Update_ItemClickCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ItemClickCheckBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ItemClickCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_ItemClickCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ItemClickCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ItemClickCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 210
                    if (!isobj23IsItemClickEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ListViewBase_IsItemClickEnabled(this.obj23, obj);
                    }
                }
            }
            private void Update_ContentGridView(global::Microsoft.UI.Xaml.Controls.GridView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ContentGridView(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ContentGridView_IsItemClickEnabled(obj.IsItemClickEnabled, phase);
                        this.Update_ContentGridView_CanDragItems(obj.CanDragItems, phase);
                        this.Update_ContentGridView_AllowDrop(obj.AllowDrop, phase);
                        this.Update_ContentGridView_CanReorderItems(obj.CanReorderItems, phase);
                        this.Update_ContentGridView_SelectionMode(obj.SelectionMode, phase);
                        this.Update_ContentGridView_FlowDirection(obj.FlowDirection, phase);
                    }
                }
            }
            private void Update_ContentGridView_IsItemClickEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 302
                    if (!isobj38ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj38, obj, null);
                    }
                }
            }
            private void Update_ContentGridView_CanDragItems(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 303
                    if (!isobj39ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj39, obj, null);
                    }
                }
            }
            private void Update_ContentGridView_AllowDrop(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 304
                    if (!isobj40ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj40, obj, null);
                    }
                }
            }
            private void Update_ContentGridView_CanReorderItems(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 305
                    if (!isobj41ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj41, obj, null);
                    }
                }
            }
            private void Update_ContentGridView_SelectionMode(global::Microsoft.UI.Xaml.Controls.ListViewSelectionMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 306
                    if (!isobj42ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj42, obj, null);
                    }
                }
            }
            private void Update_ContentGridView_FlowDirection(global::Microsoft.UI.Xaml.FlowDirection obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 307
                    if (!isobj43ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj43, obj, null);
                    }
                }
            }
            private void Update_ColumnSpace(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ColumnSpace(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ColumnSpace_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_ColumnSpace_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 197
                    if (!isobj50ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj50, obj, null);
                    }
                }
            }
            private void Update_RowSpace(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_RowSpace(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_RowSpace_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_RowSpace_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 198
                    if (!isobj51ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj51, obj, null);
                    }
                }
            }
            private void Update_WrapItemCount(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_WrapItemCount(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_WrapItemCount_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_WrapItemCount_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\GridViewPage.xaml line 199
                    if (!isobj52ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj52, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class GridViewPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<GridViewPage_obj1_Bindings> weakRefToBindingObj; 

                public GridViewPage_obj1_BindingsTracking(GridViewPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<GridViewPage_obj1_Bindings>(obj);
                }

                public GridViewPage_obj1_Bindings TryGetBindingObject()
                {
                    GridViewPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_DragCheckBox(null);
                    UpdateChildListeners_ReorderCheckBox(null);
                    UpdateChildListeners_DropCheckBox(null);
                    UpdateChildListeners_ItemClickCheckBox(null);
                    UpdateChildListeners_ContentGridView(null);
                    UpdateChildListeners_ColumnSpace(null);
                    UpdateChildListeners_RowSpace(null);
                    UpdateChildListeners_WrapItemCount(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::WinUIFasYmmApp.ControlPages.GridViewPage obj = sender as global::WinUIFasYmmApp.ControlPages.GridViewPage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_DragCheckBox(obj.DragCheckBox, DATA_CHANGED);
                                bindings.Update_ReorderCheckBox(obj.ReorderCheckBox, DATA_CHANGED);
                                bindings.Update_DropCheckBox(obj.DropCheckBox, DATA_CHANGED);
                                bindings.Update_ItemClickCheckBox(obj.ItemClickCheckBox, DATA_CHANGED);
                                bindings.Update_ContentGridView(obj.ContentGridView, DATA_CHANGED);
                                bindings.Update_ColumnSpace(obj.ColumnSpace, DATA_CHANGED);
                                bindings.Update_RowSpace(obj.RowSpace, DATA_CHANGED);
                                bindings.Update_WrapItemCount(obj.WrapItemCount, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::WinUIFasYmmApp.ControlPages.GridViewPage obj)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void DependencyPropertyChanged_DragCheckBox_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_DragCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_DragCheckBox = null;
                private long tokenDPC_DragCheckBox_IsChecked = 0;
                public void UpdateChildListeners_DragCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_DragCheckBox)
                    {
                        if (cache_DragCheckBox != null)
                        {
                            cache_DragCheckBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_DragCheckBox_IsChecked);
                            cache_DragCheckBox = null;
                        }
                        if (obj != null)
                        {
                            cache_DragCheckBox = obj;
                            tokenDPC_DragCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_DragCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_ReorderCheckBox_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_ReorderCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_ReorderCheckBox = null;
                private long tokenDPC_ReorderCheckBox_IsChecked = 0;
                public void UpdateChildListeners_ReorderCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_ReorderCheckBox)
                    {
                        if (cache_ReorderCheckBox != null)
                        {
                            cache_ReorderCheckBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_ReorderCheckBox_IsChecked);
                            cache_ReorderCheckBox = null;
                        }
                        if (obj != null)
                        {
                            cache_ReorderCheckBox = obj;
                            tokenDPC_ReorderCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_ReorderCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_DropCheckBox_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_DropCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_DropCheckBox = null;
                private long tokenDPC_DropCheckBox_IsChecked = 0;
                public void UpdateChildListeners_DropCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_DropCheckBox)
                    {
                        if (cache_DropCheckBox != null)
                        {
                            cache_DropCheckBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_DropCheckBox_IsChecked);
                            cache_DropCheckBox = null;
                        }
                        if (obj != null)
                        {
                            cache_DropCheckBox = obj;
                            tokenDPC_DropCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_DropCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_ItemClickCheckBox_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_ItemClickCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_ItemClickCheckBox = null;
                private long tokenDPC_ItemClickCheckBox_IsChecked = 0;
                public void UpdateChildListeners_ItemClickCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_ItemClickCheckBox)
                    {
                        if (cache_ItemClickCheckBox != null)
                        {
                            cache_ItemClickCheckBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_ItemClickCheckBox_IsChecked);
                            cache_ItemClickCheckBox = null;
                        }
                        if (obj != null)
                        {
                            cache_ItemClickCheckBox = obj;
                            tokenDPC_ItemClickCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_ItemClickCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_ContentGridView_IsItemClickEnabled(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.GridView obj = sender as global::Microsoft.UI.Xaml.Controls.GridView;
                        if (obj != null)
                        {
                            bindings.Update_ContentGridView_IsItemClickEnabled(obj.IsItemClickEnabled, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_ContentGridView_CanDragItems(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.GridView obj = sender as global::Microsoft.UI.Xaml.Controls.GridView;
                        if (obj != null)
                        {
                            bindings.Update_ContentGridView_CanDragItems(obj.CanDragItems, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_ContentGridView_AllowDrop(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.GridView obj = sender as global::Microsoft.UI.Xaml.Controls.GridView;
                        if (obj != null)
                        {
                            bindings.Update_ContentGridView_AllowDrop(obj.AllowDrop, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_ContentGridView_CanReorderItems(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.GridView obj = sender as global::Microsoft.UI.Xaml.Controls.GridView;
                        if (obj != null)
                        {
                            bindings.Update_ContentGridView_CanReorderItems(obj.CanReorderItems, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_ContentGridView_SelectionMode(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.GridView obj = sender as global::Microsoft.UI.Xaml.Controls.GridView;
                        if (obj != null)
                        {
                            bindings.Update_ContentGridView_SelectionMode(obj.SelectionMode, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_ContentGridView_FlowDirection(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.GridView obj = sender as global::Microsoft.UI.Xaml.Controls.GridView;
                        if (obj != null)
                        {
                            bindings.Update_ContentGridView_FlowDirection(obj.FlowDirection, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.GridView cache_ContentGridView = null;
                private long tokenDPC_ContentGridView_IsItemClickEnabled = 0;
                private long tokenDPC_ContentGridView_CanDragItems = 0;
                private long tokenDPC_ContentGridView_AllowDrop = 0;
                private long tokenDPC_ContentGridView_CanReorderItems = 0;
                private long tokenDPC_ContentGridView_SelectionMode = 0;
                private long tokenDPC_ContentGridView_FlowDirection = 0;
                public void UpdateChildListeners_ContentGridView(global::Microsoft.UI.Xaml.Controls.GridView obj)
                {
                    if (obj != cache_ContentGridView)
                    {
                        if (cache_ContentGridView != null)
                        {
                            cache_ContentGridView.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.IsItemClickEnabledProperty, tokenDPC_ContentGridView_IsItemClickEnabled);
                            cache_ContentGridView.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.CanDragItemsProperty, tokenDPC_ContentGridView_CanDragItems);
                            cache_ContentGridView.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.AllowDropProperty, tokenDPC_ContentGridView_AllowDrop);
                            cache_ContentGridView.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.CanReorderItemsProperty, tokenDPC_ContentGridView_CanReorderItems);
                            cache_ContentGridView.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.SelectionModeProperty, tokenDPC_ContentGridView_SelectionMode);
                            cache_ContentGridView.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.FrameworkElement.FlowDirectionProperty, tokenDPC_ContentGridView_FlowDirection);
                            cache_ContentGridView = null;
                        }
                        if (obj != null)
                        {
                            cache_ContentGridView = obj;
                            tokenDPC_ContentGridView_IsItemClickEnabled = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.IsItemClickEnabledProperty, DependencyPropertyChanged_ContentGridView_IsItemClickEnabled);
                            tokenDPC_ContentGridView_CanDragItems = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.CanDragItemsProperty, DependencyPropertyChanged_ContentGridView_CanDragItems);
                            tokenDPC_ContentGridView_AllowDrop = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.AllowDropProperty, DependencyPropertyChanged_ContentGridView_AllowDrop);
                            tokenDPC_ContentGridView_CanReorderItems = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.CanReorderItemsProperty, DependencyPropertyChanged_ContentGridView_CanReorderItems);
                            tokenDPC_ContentGridView_SelectionMode = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ListViewBase.SelectionModeProperty, DependencyPropertyChanged_ContentGridView_SelectionMode);
                            tokenDPC_ContentGridView_FlowDirection = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.FrameworkElement.FlowDirectionProperty, DependencyPropertyChanged_ContentGridView_FlowDirection);
                        }
                    }
                }
                public void DependencyPropertyChanged_ColumnSpace_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_ColumnSpace_Value(obj.Value, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_ColumnSpace = null;
                private long tokenDPC_ColumnSpace_Value = 0;
                public void UpdateChildListeners_ColumnSpace(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_ColumnSpace)
                    {
                        if (cache_ColumnSpace != null)
                        {
                            cache_ColumnSpace.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_ColumnSpace_Value);
                            cache_ColumnSpace = null;
                        }
                        if (obj != null)
                        {
                            cache_ColumnSpace = obj;
                            tokenDPC_ColumnSpace_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_ColumnSpace_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_RowSpace_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_RowSpace_Value(obj.Value, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_RowSpace = null;
                private long tokenDPC_RowSpace_Value = 0;
                public void UpdateChildListeners_RowSpace(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_RowSpace)
                    {
                        if (cache_RowSpace != null)
                        {
                            cache_RowSpace.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_RowSpace_Value);
                            cache_RowSpace = null;
                        }
                        if (obj != null)
                        {
                            cache_RowSpace = obj;
                            tokenDPC_RowSpace_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_RowSpace_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_WrapItemCount_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    GridViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_WrapItemCount_Value(obj.Value, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_WrapItemCount = null;
                private long tokenDPC_WrapItemCount_Value = 0;
                public void UpdateChildListeners_WrapItemCount(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_WrapItemCount)
                    {
                        if (cache_WrapItemCount != null)
                        {
                            cache_WrapItemCount.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_WrapItemCount_Value);
                            cache_WrapItemCount = null;
                        }
                        if (obj != null)
                        {
                            cache_WrapItemCount = obj;
                            tokenDPC_WrapItemCount_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_WrapItemCount_Value);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 23: // ControlPages\GridViewPage.xaml line 210
                {
                    this.ContentGridView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.ContentGridView).ItemClick += this.ContentGridView_ItemClick;
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.ContentGridView).SelectionChanged += this.ContentGridView_SelectionChanged;
                }
                break;
            case 24: // ControlPages\GridViewPage.xaml line 222
                {
                    this.ClickOutput = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 25: // ControlPages\GridViewPage.xaml line 223
                {
                    this.SelectionOutput = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 26: // ControlPages\GridViewPage.xaml line 228
                {
                    this.Control2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 27: // ControlPages\GridViewPage.xaml line 253
                {
                    global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton element27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton)element27).Click += this.FlowDirectionCheckBox_Click;
                }
                break;
            case 28: // ControlPages\GridViewPage.xaml line 257
                {
                    this.ItemClickCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.ItemClickCheckBox).Click += this.ItemClickCheckBox_Click;
                }
                break;
            case 29: // ControlPages\GridViewPage.xaml line 258
                {
                    this.DragCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 30: // ControlPages\GridViewPage.xaml line 259
                {
                    this.ReorderCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 31: // ControlPages\GridViewPage.xaml line 260
                {
                    this.DropCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 32: // ControlPages\GridViewPage.xaml line 261
                {
                    global::Microsoft.UI.Xaml.Controls.ComboBox element32 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)element32).SelectionChanged += this.SelectionModeComboBox_SelectionChanged;
                }
                break;
            case 33: // ControlPages\GridViewPage.xaml line 230
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element33 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element33).Checked += this.ItemTemplate_Checked;
                }
                break;
            case 34: // ControlPages\GridViewPage.xaml line 236
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element34 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element34).Checked += this.ItemTemplate_Checked;
                }
                break;
            case 35: // ControlPages\GridViewPage.xaml line 241
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element35 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element35).Checked += this.ItemTemplate_Checked;
                }
                break;
            case 36: // ControlPages\GridViewPage.xaml line 246
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element36 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element36).Checked += this.ItemTemplate_Checked;
                }
                break;
            case 37: // ControlPages\GridViewPage.xaml line 301
                {
                    this.itemTemplate = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                }
                break;
            case 44: // ControlPages\GridViewPage.xaml line 308
                {
                    this.DisplayDT = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                }
                break;
            case 45: // ControlPages\GridViewPage.xaml line 104
                {
                    this.StyledGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                }
                break;
            case 46: // ControlPages\GridViewPage.xaml line 114
                {
                    global::Microsoft.UI.Xaml.Controls.ItemsWrapGrid element46 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ItemsWrapGrid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ItemsWrapGrid)element46).Loaded += this.StyledGrid_InitWrapGrid;
                }
                break;
            case 47: // ControlPages\GridViewPage.xaml line 134
                {
                    this.ColumnSpace = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.ColumnSpace).ValueChanged += this.NumberBox_ValueChanged;
                }
                break;
            case 48: // ControlPages\GridViewPage.xaml line 138
                {
                    this.RowSpace = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.RowSpace).ValueChanged += this.NumberBox_ValueChanged;
                }
                break;
            case 49: // ControlPages\GridViewPage.xaml line 142
                {
                    this.WrapItemCount = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NumberBox)this.WrapItemCount).ValueChanged += this.NumberBox_ValueChanged;
                }
                break;
            case 53: // ControlPages\GridViewPage.xaml line 89
                {
                    this.BasicGridView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.GridView)this.BasicGridView).ItemClick += this.BasicGridView_ItemClick;
                }
                break;
            case 54: // ControlPages\GridViewPage.xaml line 95
                {
                    this.ClickOutput0 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\GridViewPage.xaml line 12
                {                    
                    global::WinUIFasYmmApp.ItemsPageBase element1 = (global::WinUIFasYmmApp.ItemsPageBase)target;
                    GridViewPage_obj1_Bindings bindings = new GridViewPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // ControlPages\GridViewPage.xaml line 68
                {                    
                    global::Microsoft.UI.Xaml.Controls.Grid element3 = (global::Microsoft.UI.Xaml.Controls.Grid)target;
                    GridViewPage_obj3_Bindings bindings = new GridViewPage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            case 8: // ControlPages\GridViewPage.xaml line 62
                {                    
                    global::Microsoft.UI.Xaml.Controls.StackPanel element8 = (global::Microsoft.UI.Xaml.Controls.StackPanel)target;
                    GridViewPage_obj8_Bindings bindings = new GridViewPage_obj8_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element8.DataContext);
                    element8.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element8, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element8, bindings);
                }
                break;
            case 11: // ControlPages\GridViewPage.xaml line 41
                {                    
                    global::Microsoft.UI.Xaml.Controls.Grid element11 = (global::Microsoft.UI.Xaml.Controls.Grid)target;
                    GridViewPage_obj11_Bindings bindings = new GridViewPage_obj11_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element11.DataContext);
                    element11.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element11, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element11, bindings);
                }
                break;
            case 17: // ControlPages\GridViewPage.xaml line 25
                {                    
                    global::Microsoft.UI.Xaml.Controls.RelativePanel element17 = (global::Microsoft.UI.Xaml.Controls.RelativePanel)target;
                    GridViewPage_obj17_Bindings bindings = new GridViewPage_obj17_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element17.DataContext);
                    element17.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element17, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element17, bindings);
                }
                break;
            case 22: // ControlPages\GridViewPage.xaml line 21
                {                    
                    global::Microsoft.UI.Xaml.Controls.Image element22 = (global::Microsoft.UI.Xaml.Controls.Image)target;
                    GridViewPage_obj22_Bindings bindings = new GridViewPage_obj22_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element22.DataContext);
                    element22.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element22, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element22, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

