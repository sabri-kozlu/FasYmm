#pragma checksum "C:\Users\sabri\Desktop\FasWebAPI\dev2ninovasyon\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\NavigationViewPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "15811ADC0BB4271BC2E95F768A097FFB2AA566073935D55691E0D7AF23839C09"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class NavigationViewPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_AdaptiveTrigger_MinWindowWidth(global::Microsoft.UI.Xaml.AdaptiveTrigger obj, global::System.Double value)
            {
                obj.MinWindowWidth = value;
            }
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_NavigationView_MenuItemsSource(global::Microsoft.UI.Xaml.Controls.NavigationView obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.MenuItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ContentControl_Content(global::Microsoft.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ToolTipService_ToolTip(global::Microsoft.UI.Xaml.DependencyObject obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                global::Microsoft.UI.Xaml.Controls.ToolTipService.SetToolTip(obj, value);
            }
            public static void Set_Microsoft_UI_Xaml_Controls_SymbolIcon_Symbol(global::Microsoft.UI.Xaml.Controls.SymbolIcon obj, global::Microsoft.UI.Xaml.Controls.Symbol value)
            {
                obj.Symbol = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class NavigationViewPage_obj3_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            INavigationViewPage_Bindings
        {
            private global::WinUIFasYmmApp.Common.Category dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Microsoft.UI.Xaml.Controls.SymbolIcon obj4;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3ContentDisabled = false;
            private static bool isobj3ToolTipDisabled = false;
            private static bool isobj4SymbolDisabled = false;

            public NavigationViewPage_obj3_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 15 && columnNumber == 33)
                {
                    isobj3ContentDisabled = true;
                }
                else if (lineNumber == 16 && columnNumber == 33)
                {
                    isobj3ToolTipDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 41)
                {
                    isobj4SymbolDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // ControlPages\NavigationViewPage.xaml line 14
                        this.obj3 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationViewItem>(target));
                        break;
                    case 4: // ControlPages\NavigationViewPage.xaml line 18
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.SymbolIcon>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj3.Target as global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.Common.Category>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // INavigationViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.Common.Category>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.Common.Category obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                        this.Update_Tooltip(obj.Tooltip, phase);
                        this.Update_Glyph(obj.Glyph, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 14
                    if (!isobj3ContentDisabled)
                    {
                        if ((this.obj3.Target as global::Microsoft.UI.Xaml.Controls.NavigationViewItem) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ContentControl_Content((this.obj3.Target as global::Microsoft.UI.Xaml.Controls.NavigationViewItem), obj, null);
                        }
                    }
                }
            }
            private void Update_Tooltip(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 14
                    if (!isobj3ToolTipDisabled)
                    {
                        if ((this.obj3.Target as global::Microsoft.UI.Xaml.Controls.NavigationViewItem) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ToolTipService_ToolTip((this.obj3.Target as global::Microsoft.UI.Xaml.Controls.NavigationViewItem), obj, null);
                        }
                    }
                }
            }
            private void Update_Glyph(global::Microsoft.UI.Xaml.Controls.Symbol obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 18
                    if (!isobj4SymbolDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_SymbolIcon_Symbol(this.obj4, obj);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class NavigationViewPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            INavigationViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.NavigationViewPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.AdaptiveTrigger obj5;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj26;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj27;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj28;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj29;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj30;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj31;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj32;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj33;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj34;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj35;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj36;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj43;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj48;
            private global::Microsoft.UI.Xaml.Controls.NavigationView obj49;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj5MinWindowWidthDisabled = false;
            private static bool isobj26ValueDisabled = false;
            private static bool isobj27ValueDisabled = false;
            private static bool isobj28ValueDisabled = false;
            private static bool isobj29ValueDisabled = false;
            private static bool isobj30ValueDisabled = false;
            private static bool isobj31ValueDisabled = false;
            private static bool isobj32ValueDisabled = false;
            private static bool isobj33ValueDisabled = false;
            private static bool isobj34ValueDisabled = false;
            private static bool isobj35ValueDisabled = false;
            private static bool isobj36ValueDisabled = false;
            private static bool isobj43ValueDisabled = false;
            private static bool isobj48ValueDisabled = false;
            private static bool isobj49MenuItemsSourceDisabled = false;

            private NavigationViewPage_obj1_BindingsTracking bindingsTracking;

            public NavigationViewPage_obj1_Bindings()
            {
                this.bindingsTracking = new NavigationViewPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 32 && columnNumber == 42)
                {
                    isobj5MinWindowWidthDisabled = true;
                }
                else if (lineNumber == 458 && columnNumber == 69)
                {
                    isobj26ValueDisabled = true;
                }
                else if (lineNumber == 459 && columnNumber == 71)
                {
                    isobj27ValueDisabled = true;
                }
                else if (lineNumber == 460 && columnNumber == 70)
                {
                    isobj28ValueDisabled = true;
                }
                else if (lineNumber == 461 && columnNumber == 68)
                {
                    isobj29ValueDisabled = true;
                }
                else if (lineNumber == 462 && columnNumber == 68)
                {
                    isobj30ValueDisabled = true;
                }
                else if (lineNumber == 463 && columnNumber == 71)
                {
                    isobj31ValueDisabled = true;
                }
                else if (lineNumber == 464 && columnNumber == 78)
                {
                    isobj32ValueDisabled = true;
                }
                else if (lineNumber == 465 && columnNumber == 71)
                {
                    isobj33ValueDisabled = true;
                }
                else if (lineNumber == 466 && columnNumber == 73)
                {
                    isobj34ValueDisabled = true;
                }
                else if (lineNumber == 467 && columnNumber == 79)
                {
                    isobj35ValueDisabled = true;
                }
                else if (lineNumber == 468 && columnNumber == 74)
                {
                    isobj36ValueDisabled = true;
                }
                else if (lineNumber == 332 && columnNumber == 69)
                {
                    isobj43ValueDisabled = true;
                }
                else if (lineNumber == 268 && columnNumber == 69)
                {
                    isobj48ValueDisabled = true;
                }
                else if (lineNumber == 214 && columnNumber == 45)
                {
                    isobj49MenuItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // ControlPages\NavigationViewPage.xaml line 32
                        this.obj5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.AdaptiveTrigger>(target);
                        break;
                    case 26: // ControlPages\NavigationViewPage.xaml line 458
                        this.obj26 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 27: // ControlPages\NavigationViewPage.xaml line 459
                        this.obj27 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 28: // ControlPages\NavigationViewPage.xaml line 460
                        this.obj28 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 29: // ControlPages\NavigationViewPage.xaml line 461
                        this.obj29 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 30: // ControlPages\NavigationViewPage.xaml line 462
                        this.obj30 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 31: // ControlPages\NavigationViewPage.xaml line 463
                        this.obj31 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 32: // ControlPages\NavigationViewPage.xaml line 464
                        this.obj32 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 33: // ControlPages\NavigationViewPage.xaml line 465
                        this.obj33 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 34: // ControlPages\NavigationViewPage.xaml line 466
                        this.obj34 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 35: // ControlPages\NavigationViewPage.xaml line 467
                        this.obj35 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 36: // ControlPages\NavigationViewPage.xaml line 468
                        this.obj36 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 43: // ControlPages\NavigationViewPage.xaml line 332
                        this.obj43 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 48: // ControlPages\NavigationViewPage.xaml line 268
                        this.obj48 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 49: // ControlPages\NavigationViewPage.xaml line 212
                        this.obj49 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // INavigationViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.NavigationViewPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.NavigationViewPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_nvSample2(obj.nvSample2, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_settingsCheck(obj.settingsCheck, phase);
                        this.Update_nvSample(obj.nvSample, phase);
                        this.Update_enableCheck(obj.enableCheck, phase);
                        this.Update_headerText(obj.headerText, phase);
                        this.Update_headerCheck(obj.headerCheck, phase);
                        this.Update_paneText(obj.paneText, phase);
                        this.Update_PaneHyperlink(obj.PaneHyperlink, phase);
                        this.Update_FooterStackPanel(obj.FooterStackPanel, phase);
                        this.Update_SamplePage2Item(obj.SamplePage2Item, phase);
                        this.Update_nvSample8(obj.nvSample8, phase);
                        this.Update_nvSample9(obj.nvSample9, phase);
                        this.Update_Categories(obj.Categories, phase);
                    }
                }
            }
            private void Update_nvSample2(global::Microsoft.UI.Xaml.Controls.NavigationView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_nvSample2_CompactModeThresholdWidth(obj.CompactModeThresholdWidth, phase);
                    }
                }
            }
            private void Update_nvSample2_CompactModeThresholdWidth(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 32
                    if (!isobj5MinWindowWidthDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_AdaptiveTrigger_MinWindowWidth(this.obj5, obj);
                    }
                }
            }
            private void Update_settingsCheck(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_settingsCheck(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_settingsCheck_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_settingsCheck_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 458
                    if (!isobj26ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj26, obj, null);
                    }
                }
            }
            private void Update_nvSample(global::Microsoft.UI.Xaml.Controls.NavigationView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_nvSample(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_nvSample_IsBackButtonVisible(obj.IsBackButtonVisible, phase);
                        this.Update_nvSample_PaneDisplayMode(obj.PaneDisplayMode, phase);
                        this.Update_nvSample_SelectionFollowsFocus(obj.SelectionFollowsFocus, phase);
                    }
                }
            }
            private void Update_nvSample_IsBackButtonVisible(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 459
                    if (!isobj27ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj27, obj, null);
                    }
                }
            }
            private void Update_enableCheck(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_enableCheck(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_enableCheck_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_enableCheck_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 460
                    if (!isobj28ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj28, obj, null);
                    }
                }
            }
            private void Update_headerText(global::Microsoft.UI.Xaml.Controls.TextBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_headerText(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_headerText_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_headerText_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 461
                    if (!isobj29ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj29, obj, null);
                    }
                }
            }
            private void Update_headerCheck(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_headerCheck(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_headerCheck_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_headerCheck_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 462
                    if (!isobj30ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj30, obj, null);
                    }
                }
            }
            private void Update_paneText(global::Microsoft.UI.Xaml.Controls.TextBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_paneText(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_paneText_Text(obj.Text, phase);
                    }
                }
            }
            private void Update_paneText_Text(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 463
                    if (!isobj31ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj31, obj, null);
                    }
                }
            }
            private void Update_PaneHyperlink(global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PaneHyperlink(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PaneHyperlink_Visibility(obj.Visibility, phase);
                    }
                }
            }
            private void Update_PaneHyperlink_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 464
                    if (!isobj32ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj32, obj, null);
                    }
                }
            }
            private void Update_FooterStackPanel(global::Microsoft.UI.Xaml.Controls.StackPanel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_FooterStackPanel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_FooterStackPanel_Visibility(obj.Visibility, phase);
                    }
                }
            }
            private void Update_FooterStackPanel_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 465
                    if (!isobj33ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj33, obj, null);
                    }
                }
            }
            private void Update_nvSample_PaneDisplayMode(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 466
                    if (!isobj34ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj34, obj, null);
                    }
                }
            }
            private void Update_nvSample_SelectionFollowsFocus(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 467
                    if (!isobj35ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj35, obj, null);
                    }
                }
            }
            private void Update_SamplePage2Item(global::Microsoft.UI.Xaml.Controls.NavigationViewItem obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SamplePage2Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SamplePage2Item_SelectsOnInvoked(obj.SelectsOnInvoked, phase);
                    }
                }
            }
            private void Update_SamplePage2Item_SelectsOnInvoked(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 468
                    if (!isobj36ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj36, obj, null);
                    }
                }
            }
            private void Update_nvSample8(global::Microsoft.UI.Xaml.Controls.NavigationView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_nvSample8(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_nvSample8_PaneDisplayMode(obj.PaneDisplayMode, phase);
                    }
                }
            }
            private void Update_nvSample8_PaneDisplayMode(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 332
                    if (!isobj43ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj43, obj, null);
                    }
                }
            }
            private void Update_nvSample9(global::Microsoft.UI.Xaml.Controls.NavigationView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_nvSample9(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_nvSample9_PaneDisplayMode(obj.PaneDisplayMode, phase);
                    }
                }
            }
            private void Update_nvSample9_PaneDisplayMode(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 268
                    if (!isobj48ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj48, obj, null);
                    }
                }
            }
            private void Update_Categories(global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Categories(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\NavigationViewPage.xaml line 212
                    if (!isobj49MenuItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_NavigationView_MenuItemsSource(this.obj49, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class NavigationViewPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<NavigationViewPage_obj1_Bindings> weakRefToBindingObj; 

                public NavigationViewPage_obj1_BindingsTracking(NavigationViewPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<NavigationViewPage_obj1_Bindings>(obj);
                }

                public NavigationViewPage_obj1_Bindings TryGetBindingObject()
                {
                    NavigationViewPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_settingsCheck(null);
                    UpdateChildListeners_nvSample(null);
                    UpdateChildListeners_enableCheck(null);
                    UpdateChildListeners_headerText(null);
                    UpdateChildListeners_headerCheck(null);
                    UpdateChildListeners_paneText(null);
                    UpdateChildListeners_PaneHyperlink(null);
                    UpdateChildListeners_FooterStackPanel(null);
                    UpdateChildListeners_SamplePage2Item(null);
                    UpdateChildListeners_nvSample8(null);
                    UpdateChildListeners_nvSample9(null);
                    UpdateChildListeners_Categories(null);
                }

                public void DependencyPropertyChanged_settingsCheck_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_settingsCheck_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_settingsCheck = null;
                private long tokenDPC_settingsCheck_IsChecked = 0;
                public void UpdateChildListeners_settingsCheck(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_settingsCheck)
                    {
                        if (cache_settingsCheck != null)
                        {
                            cache_settingsCheck.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_settingsCheck_IsChecked);
                            cache_settingsCheck = null;
                        }
                        if (obj != null)
                        {
                            cache_settingsCheck = obj;
                            tokenDPC_settingsCheck_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_settingsCheck_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_nvSample_IsBackButtonVisible(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NavigationView obj = sender as global::Microsoft.UI.Xaml.Controls.NavigationView;
                        if (obj != null)
                        {
                            bindings.Update_nvSample_IsBackButtonVisible(obj.IsBackButtonVisible, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_nvSample_PaneDisplayMode(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NavigationView obj = sender as global::Microsoft.UI.Xaml.Controls.NavigationView;
                        if (obj != null)
                        {
                            bindings.Update_nvSample_PaneDisplayMode(obj.PaneDisplayMode, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_nvSample_SelectionFollowsFocus(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NavigationView obj = sender as global::Microsoft.UI.Xaml.Controls.NavigationView;
                        if (obj != null)
                        {
                            bindings.Update_nvSample_SelectionFollowsFocus(obj.SelectionFollowsFocus, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NavigationView cache_nvSample = null;
                private long tokenDPC_nvSample_IsBackButtonVisible = 0;
                private long tokenDPC_nvSample_PaneDisplayMode = 0;
                private long tokenDPC_nvSample_SelectionFollowsFocus = 0;
                public void UpdateChildListeners_nvSample(global::Microsoft.UI.Xaml.Controls.NavigationView obj)
                {
                    if (obj != cache_nvSample)
                    {
                        if (cache_nvSample != null)
                        {
                            cache_nvSample.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisibleProperty, tokenDPC_nvSample_IsBackButtonVisible);
                            cache_nvSample.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty, tokenDPC_nvSample_PaneDisplayMode);
                            cache_nvSample.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocusProperty, tokenDPC_nvSample_SelectionFollowsFocus);
                            cache_nvSample = null;
                        }
                        if (obj != null)
                        {
                            cache_nvSample = obj;
                            tokenDPC_nvSample_IsBackButtonVisible = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisibleProperty, DependencyPropertyChanged_nvSample_IsBackButtonVisible);
                            tokenDPC_nvSample_PaneDisplayMode = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty, DependencyPropertyChanged_nvSample_PaneDisplayMode);
                            tokenDPC_nvSample_SelectionFollowsFocus = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocusProperty, DependencyPropertyChanged_nvSample_SelectionFollowsFocus);
                        }
                    }
                }
                public void DependencyPropertyChanged_enableCheck_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_enableCheck_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_enableCheck = null;
                private long tokenDPC_enableCheck_IsChecked = 0;
                public void UpdateChildListeners_enableCheck(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_enableCheck)
                    {
                        if (cache_enableCheck != null)
                        {
                            cache_enableCheck.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_enableCheck_IsChecked);
                            cache_enableCheck = null;
                        }
                        if (obj != null)
                        {
                            cache_enableCheck = obj;
                            tokenDPC_enableCheck_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_enableCheck_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_headerText_Text(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.TextBox obj = sender as global::Microsoft.UI.Xaml.Controls.TextBox;
                        if (obj != null)
                        {
                            bindings.Update_headerText_Text(obj.Text, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.TextBox cache_headerText = null;
                private long tokenDPC_headerText_Text = 0;
                public void UpdateChildListeners_headerText(global::Microsoft.UI.Xaml.Controls.TextBox obj)
                {
                    if (obj != cache_headerText)
                    {
                        if (cache_headerText != null)
                        {
                            cache_headerText.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, tokenDPC_headerText_Text);
                            cache_headerText = null;
                        }
                        if (obj != null)
                        {
                            cache_headerText = obj;
                            tokenDPC_headerText_Text = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, DependencyPropertyChanged_headerText_Text);
                        }
                    }
                }
                public void DependencyPropertyChanged_headerCheck_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_headerCheck_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_headerCheck = null;
                private long tokenDPC_headerCheck_IsChecked = 0;
                public void UpdateChildListeners_headerCheck(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_headerCheck)
                    {
                        if (cache_headerCheck != null)
                        {
                            cache_headerCheck.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_headerCheck_IsChecked);
                            cache_headerCheck = null;
                        }
                        if (obj != null)
                        {
                            cache_headerCheck = obj;
                            tokenDPC_headerCheck_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_headerCheck_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_paneText_Text(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.TextBox obj = sender as global::Microsoft.UI.Xaml.Controls.TextBox;
                        if (obj != null)
                        {
                            bindings.Update_paneText_Text(obj.Text, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.TextBox cache_paneText = null;
                private long tokenDPC_paneText_Text = 0;
                public void UpdateChildListeners_paneText(global::Microsoft.UI.Xaml.Controls.TextBox obj)
                {
                    if (obj != cache_paneText)
                    {
                        if (cache_paneText != null)
                        {
                            cache_paneText.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, tokenDPC_paneText_Text);
                            cache_paneText = null;
                        }
                        if (obj != null)
                        {
                            cache_paneText = obj;
                            tokenDPC_paneText_Text = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.TextBox.TextProperty, DependencyPropertyChanged_paneText_Text);
                        }
                    }
                }
                public void DependencyPropertyChanged_PaneHyperlink_Visibility(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj = sender as global::Microsoft.UI.Xaml.Controls.HyperlinkButton;
                        if (obj != null)
                        {
                            bindings.Update_PaneHyperlink_Visibility(obj.Visibility, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.HyperlinkButton cache_PaneHyperlink = null;
                private long tokenDPC_PaneHyperlink_Visibility = 0;
                public void UpdateChildListeners_PaneHyperlink(global::Microsoft.UI.Xaml.Controls.HyperlinkButton obj)
                {
                    if (obj != cache_PaneHyperlink)
                    {
                        if (cache_PaneHyperlink != null)
                        {
                            cache_PaneHyperlink.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, tokenDPC_PaneHyperlink_Visibility);
                            cache_PaneHyperlink = null;
                        }
                        if (obj != null)
                        {
                            cache_PaneHyperlink = obj;
                            tokenDPC_PaneHyperlink_Visibility = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, DependencyPropertyChanged_PaneHyperlink_Visibility);
                        }
                    }
                }
                public void DependencyPropertyChanged_FooterStackPanel_Visibility(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.StackPanel obj = sender as global::Microsoft.UI.Xaml.Controls.StackPanel;
                        if (obj != null)
                        {
                            bindings.Update_FooterStackPanel_Visibility(obj.Visibility, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.StackPanel cache_FooterStackPanel = null;
                private long tokenDPC_FooterStackPanel_Visibility = 0;
                public void UpdateChildListeners_FooterStackPanel(global::Microsoft.UI.Xaml.Controls.StackPanel obj)
                {
                    if (obj != cache_FooterStackPanel)
                    {
                        if (cache_FooterStackPanel != null)
                        {
                            cache_FooterStackPanel.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, tokenDPC_FooterStackPanel_Visibility);
                            cache_FooterStackPanel = null;
                        }
                        if (obj != null)
                        {
                            cache_FooterStackPanel = obj;
                            tokenDPC_FooterStackPanel_Visibility = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.UIElement.VisibilityProperty, DependencyPropertyChanged_FooterStackPanel_Visibility);
                        }
                    }
                }
                public void DependencyPropertyChanged_SamplePage2Item_SelectsOnInvoked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NavigationViewItem obj = sender as global::Microsoft.UI.Xaml.Controls.NavigationViewItem;
                        if (obj != null)
                        {
                            bindings.Update_SamplePage2Item_SelectsOnInvoked(obj.SelectsOnInvoked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NavigationViewItem cache_SamplePage2Item = null;
                private long tokenDPC_SamplePage2Item_SelectsOnInvoked = 0;
                public void UpdateChildListeners_SamplePage2Item(global::Microsoft.UI.Xaml.Controls.NavigationViewItem obj)
                {
                    if (obj != cache_SamplePage2Item)
                    {
                        if (cache_SamplePage2Item != null)
                        {
                            cache_SamplePage2Item.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvokedProperty, tokenDPC_SamplePage2Item_SelectsOnInvoked);
                            cache_SamplePage2Item = null;
                        }
                        if (obj != null)
                        {
                            cache_SamplePage2Item = obj;
                            tokenDPC_SamplePage2Item_SelectsOnInvoked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvokedProperty, DependencyPropertyChanged_SamplePage2Item_SelectsOnInvoked);
                        }
                    }
                }
                public void DependencyPropertyChanged_nvSample8_PaneDisplayMode(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NavigationView obj = sender as global::Microsoft.UI.Xaml.Controls.NavigationView;
                        if (obj != null)
                        {
                            bindings.Update_nvSample8_PaneDisplayMode(obj.PaneDisplayMode, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NavigationView cache_nvSample8 = null;
                private long tokenDPC_nvSample8_PaneDisplayMode = 0;
                public void UpdateChildListeners_nvSample8(global::Microsoft.UI.Xaml.Controls.NavigationView obj)
                {
                    if (obj != cache_nvSample8)
                    {
                        if (cache_nvSample8 != null)
                        {
                            cache_nvSample8.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty, tokenDPC_nvSample8_PaneDisplayMode);
                            cache_nvSample8 = null;
                        }
                        if (obj != null)
                        {
                            cache_nvSample8 = obj;
                            tokenDPC_nvSample8_PaneDisplayMode = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty, DependencyPropertyChanged_nvSample8_PaneDisplayMode);
                        }
                    }
                }
                public void DependencyPropertyChanged_nvSample9_PaneDisplayMode(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NavigationView obj = sender as global::Microsoft.UI.Xaml.Controls.NavigationView;
                        if (obj != null)
                        {
                            bindings.Update_nvSample9_PaneDisplayMode(obj.PaneDisplayMode, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NavigationView cache_nvSample9 = null;
                private long tokenDPC_nvSample9_PaneDisplayMode = 0;
                public void UpdateChildListeners_nvSample9(global::Microsoft.UI.Xaml.Controls.NavigationView obj)
                {
                    if (obj != cache_nvSample9)
                    {
                        if (cache_nvSample9 != null)
                        {
                            cache_nvSample9.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty, tokenDPC_nvSample9_PaneDisplayMode);
                            cache_nvSample9 = null;
                        }
                        if (obj != null)
                        {
                            cache_nvSample9 = obj;
                            tokenDPC_nvSample9_PaneDisplayMode = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayModeProperty, DependencyPropertyChanged_nvSample9_PaneDisplayMode);
                        }
                    }
                }
                public void PropertyChanged_Categories(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_Categories(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    NavigationViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase> cache_Categories = null;
                public void UpdateChildListeners_Categories(global::System.Collections.ObjectModel.ObservableCollection<global::WinUIFasYmmApp.Common.CategoryBase> obj)
                {
                    if (obj != cache_Categories)
                    {
                        if (cache_Categories != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Categories).PropertyChanged -= PropertyChanged_Categories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_Categories).CollectionChanged -= CollectionChanged_Categories;
                            cache_Categories = null;
                        }
                        if (obj != null)
                        {
                            cache_Categories = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Categories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_Categories;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 6: // ControlPages\NavigationViewPage.xaml line 342
                {
                    this.settingsCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.settingsCheck).Click += this.settingsCheck_Click;
                }
                break;
            case 7: // ControlPages\NavigationViewPage.xaml line 343
                {
                    this.visibleCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.visibleCheck).Click += this.visibleCheck_Click;
                }
                break;
            case 8: // ControlPages\NavigationViewPage.xaml line 344
                {
                    this.enableCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.enableCheck).Click += this.enableCheck_Click;
                }
                break;
            case 9: // ControlPages\NavigationViewPage.xaml line 345
                {
                    this.autoSuggestCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.autoSuggestCheck).Click += this.autoSuggestCheck_Click;
                }
                break;
            case 10: // ControlPages\NavigationViewPage.xaml line 348
                {
                    this.headerText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 11: // ControlPages\NavigationViewPage.xaml line 349
                {
                    this.headerCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.headerCheck).Click += this.headerCheck_Click;
                }
                break;
            case 12: // ControlPages\NavigationViewPage.xaml line 351
                {
                    this.paneText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 13: // ControlPages\NavigationViewPage.xaml line 352
                {
                    this.panemc_Check = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.panemc_Check).Click += this.panemc_Check_Click;
                }
                break;
            case 14: // ControlPages\NavigationViewPage.xaml line 353
                {
                    this.paneFooterCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.paneFooterCheck).Click += this.paneFooterCheck_Click;
                }
                break;
            case 15: // ControlPages\NavigationViewPage.xaml line 356
                {
                    this.nvSampleLeft = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSampleLeft).Checked += this.panePositionLeft_Checked;
                }
                break;
            case 16: // ControlPages\NavigationViewPage.xaml line 357
                {
                    this.nvSampleTop = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSampleTop).Checked += this.panePositionTop_Checked;
                }
                break;
            case 17: // ControlPages\NavigationViewPage.xaml line 359
                {
                    this.sffCheck = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.sffCheck).Click += this.sffCheck_Click;
                }
                break;
            case 18: // ControlPages\NavigationViewPage.xaml line 360
                {
                    this.suppressselectionCheck_Checked = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.CheckBox)this.suppressselectionCheck_Checked).Click += this.suppressselectionCheck_Checked_Click;
                }
                break;
            case 19: // ControlPages\NavigationViewPage.xaml line 365
                {
                    this.nvSample = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample).SelectionChanged += this.NavigationView_SelectionChanged;
                }
                break;
            case 20: // ControlPages\NavigationViewPage.xaml line 372
                {
                    this.SamplePage1Item = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationViewItem>(target);
                }
                break;
            case 21: // ControlPages\NavigationViewPage.xaml line 378
                {
                    this.SamplePage2Item = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationViewItem>(target);
                }
                break;
            case 22: // ControlPages\NavigationViewPage.xaml line 383
                {
                    this.SamplePage3Item = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationViewItem>(target);
                }
                break;
            case 23: // ControlPages\NavigationViewPage.xaml line 391
                {
                    this.PaneHyperlink = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.HyperlinkButton>(target);
                }
                break;
            case 24: // ControlPages\NavigationViewPage.xaml line 399
                {
                    this.FooterStackPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 25: // ControlPages\NavigationViewPage.xaml line 405
                {
                    this.contentFrame = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 37: // ControlPages\NavigationViewPage.xaml line 469
                {
                    this.navViewASB = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                }
                break;
            case 38: // ControlPages\NavigationViewPage.xaml line 279
                {
                    this.nvSample8Left = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSample8Left).Checked += this.panePositionLeft_Checked;
                }
                break;
            case 39: // ControlPages\NavigationViewPage.xaml line 280
                {
                    this.nvSample8Top = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSample8Top).Checked += this.panePositionTop_Checked;
                }
                break;
            case 40: // ControlPages\NavigationViewPage.xaml line 281
                {
                    this.nvSample8LeftCompact = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSample8LeftCompact).Checked += this.panePositionLeftCompact_Checked;
                }
                break;
            case 41: // ControlPages\NavigationViewPage.xaml line 309
                {
                    this.nvSample8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample8).SelectionChanged += this.NavigationView_SelectionChanged8;
                }
                break;
            case 42: // ControlPages\NavigationViewPage.xaml line 328
                {
                    this.contentFrame8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 44: // ControlPages\NavigationViewPage.xaml line 231
                {
                    this.nvSample9Left = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSample9Left).Checked += this.panePositionLeft_Checked;
                }
                break;
            case 45: // ControlPages\NavigationViewPage.xaml line 232
                {
                    this.nvSample9Top = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)this.nvSample9Top).Checked += this.panePositionTop_Checked;
                }
                break;
            case 46: // ControlPages\NavigationViewPage.xaml line 246
                {
                    this.nvSample9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample9).SelectionChanged += this.NavigationView_SelectionChanged9;
                }
                break;
            case 47: // ControlPages\NavigationViewPage.xaml line 264
                {
                    this.contentFrame9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 49: // ControlPages\NavigationViewPage.xaml line 212
                {
                    this.nvSample4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample4).SelectionChanged += this.NavigationView_SelectionChanged4;
                }
                break;
            case 50: // ControlPages\NavigationViewPage.xaml line 217
                {
                    this.contentFrame4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 51: // ControlPages\NavigationViewPage.xaml line 182
                {
                    this.nvSample7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample7).SelectionChanged += this.NavigationView_SelectionChanged7;
                }
                break;
            case 52: // ControlPages\NavigationViewPage.xaml line 191
                {
                    this.contentFrame7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 53: // ControlPages\NavigationViewPage.xaml line 139
                {
                    this.InnerGrid = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 54: // ControlPages\NavigationViewPage.xaml line 149
                {
                    this.nvSample2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample2).SelectionChanged += this.NavigationView_SelectionChanged2;
                }
                break;
            case 55: // ControlPages\NavigationViewPage.xaml line 160
                {
                    this.contentFrame2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 56: // ControlPages\NavigationViewPage.xaml line 115
                {
                    this.nvSample6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample6).SelectionChanged += this.NavigationView_SelectionChanged6;
                }
                break;
            case 57: // ControlPages\NavigationViewPage.xaml line 129
                {
                    this.contentFrame6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 58: // ControlPages\NavigationViewPage.xaml line 82
                {
                    this.nvSample5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NavigationView>(target);
                    ((global::Microsoft.UI.Xaml.Controls.NavigationView)this.nvSample5).SelectionChanged += this.NavigationView_SelectionChanged5;
                }
                break;
            case 59: // ControlPages\NavigationViewPage.xaml line 95
                {
                    this.contentFrame5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\NavigationViewPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    NavigationViewPage_obj1_Bindings bindings = new NavigationViewPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // ControlPages\NavigationViewPage.xaml line 14
                {                    
                    global::Microsoft.UI.Xaml.Controls.NavigationViewItem element3 = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)target;
                    NavigationViewPage_obj3_Bindings bindings = new NavigationViewPage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

