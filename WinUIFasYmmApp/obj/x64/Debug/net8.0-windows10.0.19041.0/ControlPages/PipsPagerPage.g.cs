#pragma checksum "C:\Users\2NSenior\source\repos\WinUIFasYmmApp\WinUIFasYmmApp\ControlPages\PipsPagerPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "BFFCAB59D4F9812133F64E9C5FBF9BDC5F42000C1D7071F0048FC802268CBC67"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class PipsPagerPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_PipsPager_NumberOfPages(global::Microsoft.UI.Xaml.Controls.PipsPager obj, global::System.Int32 value)
            {
                obj.NumberOfPages = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_PipsPager_SelectedPageIndex(global::Microsoft.UI.Xaml.Controls.PipsPager obj, global::System.Int32 value)
            {
                obj.SelectedPageIndex = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class PipsPagerPage_obj14_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IPipsPagerPage_Bindings
        {
            private global::System.String dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14SourceDisabled = false;

            public PipsPagerPage_obj14_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 17 && columnNumber == 40)
                {
                    isobj14SourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // ControlPages\PipsPagerPage.xaml line 17
                        this.obj14 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target));
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj14.Target as global::Microsoft.UI.Xaml.Controls.Image);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::System.String>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IPipsPagerPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::System.String>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 17
                    if (!isobj14SourceDisabled)
                    {
                        if ((this.obj14.Target as global::Microsoft.UI.Xaml.Controls.Image) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source((this.obj14.Target as global::Microsoft.UI.Xaml.Controls.Image), (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class PipsPagerPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IPipsPagerPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.PipsPagerPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj8;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj9;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj10;
            private global::Microsoft.UI.Xaml.Controls.FlipView obj11;
            private global::Microsoft.UI.Xaml.Controls.PipsPager obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8ValueDisabled = false;
            private static bool isobj9ValueDisabled = false;
            private static bool isobj10ValueDisabled = false;
            private static bool isobj11ItemsSourceDisabled = false;
            private static bool isobj12NumberOfPagesDisabled = false;
            private static bool isobj12SelectedPageIndexDisabled = false;

            private PipsPagerPage_obj1_BindingsTracking bindingsTracking;

            public PipsPagerPage_obj1_Bindings()
            {
                this.bindingsTracking = new PipsPagerPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 78 && columnNumber == 69)
                {
                    isobj8ValueDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 68)
                {
                    isobj9ValueDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 68)
                {
                    isobj10ValueDisabled = true;
                }
                else if (lineNumber == 14 && columnNumber == 76)
                {
                    isobj11ItemsSourceDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 25)
                {
                    isobj12NumberOfPagesDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 25)
                {
                    isobj12SelectedPageIndexDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // ControlPages\PipsPagerPage.xaml line 78
                        this.obj8 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 9: // ControlPages\PipsPagerPage.xaml line 79
                        this.obj9 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 10: // ControlPages\PipsPagerPage.xaml line 80
                        this.obj10 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 11: // ControlPages\PipsPagerPage.xaml line 14
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FlipView>(target);
                        break;
                    case 12: // ControlPages\PipsPagerPage.xaml line 21
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PipsPager>(target);
                        this.bindingsTracking.RegisterTwoWayListener_12(this.obj12);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IPipsPagerPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.PipsPagerPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.PipsPagerPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_OrientationComboBox(obj.OrientationComboBox, phase);
                        this.Update_PrevButtonComboBox(obj.PrevButtonComboBox, phase);
                        this.Update_NextButtonComboBox(obj.NextButtonComboBox, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Pictures(obj.Pictures, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Gallery(obj.Gallery, phase);
                    }
                }
            }
            private void Update_OrientationComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_OrientationComboBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_OrientationComboBox_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_OrientationComboBox_SelectedValue(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 78
                    if (!isobj8ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj8, obj, null);
                    }
                }
            }
            private void Update_PrevButtonComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PrevButtonComboBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PrevButtonComboBox_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_PrevButtonComboBox_SelectedValue(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 79
                    if (!isobj9ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj9, obj, null);
                    }
                }
            }
            private void Update_NextButtonComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_NextButtonComboBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_NextButtonComboBox_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_NextButtonComboBox_SelectedValue(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 80
                    if (!isobj10ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj10, obj, null);
                    }
                }
            }
            private void Update_Pictures(global::System.Collections.Generic.List<global::System.String> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Pictures_Count(obj.Count, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 14
                    if (!isobj11ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj11, obj, null);
                    }
                }
            }
            private void Update_Pictures_Count(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 21
                    if (!isobj12NumberOfPagesDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_PipsPager_NumberOfPages(this.obj12, obj);
                    }
                }
            }
            private void Update_Gallery(global::Microsoft.UI.Xaml.Controls.FlipView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Gallery(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Gallery_SelectedIndex(obj.SelectedIndex, phase);
                    }
                }
            }
            private void Update_Gallery_SelectedIndex(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\PipsPagerPage.xaml line 21
                    if (!isobj12SelectedPageIndexDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_PipsPager_SelectedPageIndex(this.obj12, obj);
                    }
                }
            }
            private void UpdateTwoWay_12_SelectedPageIndex()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.Gallery != null)
                        {
                            this.dataRoot.Gallery.SelectedIndex = this.obj12.SelectedPageIndex;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PipsPagerPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<PipsPagerPage_obj1_Bindings> weakRefToBindingObj; 

                public PipsPagerPage_obj1_BindingsTracking(PipsPagerPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PipsPagerPage_obj1_Bindings>(obj);
                }

                public PipsPagerPage_obj1_Bindings TryGetBindingObject()
                {
                    PipsPagerPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_OrientationComboBox(null);
                    UpdateChildListeners_PrevButtonComboBox(null);
                    UpdateChildListeners_NextButtonComboBox(null);
                    UpdateChildListeners_Gallery(null);
                }

                public void DependencyPropertyChanged_OrientationComboBox_SelectedValue(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    PipsPagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_OrientationComboBox_SelectedValue(obj.SelectedValue, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_OrientationComboBox = null;
                private long tokenDPC_OrientationComboBox_SelectedValue = 0;
                public void UpdateChildListeners_OrientationComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_OrientationComboBox)
                    {
                        if (cache_OrientationComboBox != null)
                        {
                            cache_OrientationComboBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, tokenDPC_OrientationComboBox_SelectedValue);
                            cache_OrientationComboBox = null;
                        }
                        if (obj != null)
                        {
                            cache_OrientationComboBox = obj;
                            tokenDPC_OrientationComboBox_SelectedValue = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, DependencyPropertyChanged_OrientationComboBox_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_PrevButtonComboBox_SelectedValue(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    PipsPagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_PrevButtonComboBox_SelectedValue(obj.SelectedValue, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_PrevButtonComboBox = null;
                private long tokenDPC_PrevButtonComboBox_SelectedValue = 0;
                public void UpdateChildListeners_PrevButtonComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_PrevButtonComboBox)
                    {
                        if (cache_PrevButtonComboBox != null)
                        {
                            cache_PrevButtonComboBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, tokenDPC_PrevButtonComboBox_SelectedValue);
                            cache_PrevButtonComboBox = null;
                        }
                        if (obj != null)
                        {
                            cache_PrevButtonComboBox = obj;
                            tokenDPC_PrevButtonComboBox_SelectedValue = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, DependencyPropertyChanged_PrevButtonComboBox_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_NextButtonComboBox_SelectedValue(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    PipsPagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_NextButtonComboBox_SelectedValue(obj.SelectedValue, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_NextButtonComboBox = null;
                private long tokenDPC_NextButtonComboBox_SelectedValue = 0;
                public void UpdateChildListeners_NextButtonComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_NextButtonComboBox)
                    {
                        if (cache_NextButtonComboBox != null)
                        {
                            cache_NextButtonComboBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, tokenDPC_NextButtonComboBox_SelectedValue);
                            cache_NextButtonComboBox = null;
                        }
                        if (obj != null)
                        {
                            cache_NextButtonComboBox = obj;
                            tokenDPC_NextButtonComboBox_SelectedValue = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, DependencyPropertyChanged_NextButtonComboBox_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_Gallery_SelectedIndex(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    PipsPagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.FlipView obj = sender as global::Microsoft.UI.Xaml.Controls.FlipView;
                        if (obj != null)
                        {
                            bindings.Update_Gallery_SelectedIndex(obj.SelectedIndex, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.FlipView cache_Gallery = null;
                private long tokenDPC_Gallery_SelectedIndex = 0;
                public void UpdateChildListeners_Gallery(global::Microsoft.UI.Xaml.Controls.FlipView obj)
                {
                    if (obj != cache_Gallery)
                    {
                        if (cache_Gallery != null)
                        {
                            cache_Gallery.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, tokenDPC_Gallery_SelectedIndex);
                            cache_Gallery = null;
                        }
                        if (obj != null)
                        {
                            cache_Gallery = obj;
                            tokenDPC_Gallery_SelectedIndex = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedIndexProperty, DependencyPropertyChanged_Gallery_SelectedIndex);
                        }
                    }
                }
                public void RegisterTwoWayListener_12(global::Microsoft.UI.Xaml.Controls.PipsPager sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.PipsPager.SelectedPageIndexProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_12_SelectedPageIndex();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\PipsPagerPage.xaml line 11
                {
                    this.Example1 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 3: // ControlPages\PipsPagerPage.xaml line 47
                {
                    this.Example2 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 4: // ControlPages\PipsPagerPage.xaml line 49
                {
                    this.TestPipsPager2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PipsPager>(target);
                }
                break;
            case 5: // ControlPages\PipsPagerPage.xaml line 53
                {
                    this.OrientationComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.OrientationComboBox).SelectionChanged += this.OrientationComboBox_SelectionChanged;
                }
                break;
            case 6: // ControlPages\PipsPagerPage.xaml line 57
                {
                    this.PrevButtonComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.PrevButtonComboBox).SelectionChanged += this.PrevButtonComboBox_SelectionChanged;
                }
                break;
            case 7: // ControlPages\PipsPagerPage.xaml line 62
                {
                    this.NextButtonComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.NextButtonComboBox).SelectionChanged += this.NextButtonComboBox_SelectionChanged;
                }
                break;
            case 11: // ControlPages\PipsPagerPage.xaml line 14
                {
                    this.Gallery = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FlipView>(target);
                }
                break;
            case 12: // ControlPages\PipsPagerPage.xaml line 21
                {
                    this.FlipViewPipsPager = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PipsPager>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\PipsPagerPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    PipsPagerPage_obj1_Bindings bindings = new PipsPagerPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 14: // ControlPages\PipsPagerPage.xaml line 17
                {                    
                    global::Microsoft.UI.Xaml.Controls.Image element14 = (global::Microsoft.UI.Xaml.Controls.Image)target;
                    PipsPagerPage_obj14_Bindings bindings = new PipsPagerPage_obj14_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element14.DataContext);
                    element14.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element14, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element14, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

