#pragma checksum "C:\Users\Sa\Desktop\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\SliderPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "083AE23539C2AC33CD22B7F536F3348BE6CE7EA81159821258D7DB7276A490FB"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class SliderPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Minimum(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Minimum = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Maximum(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Maximum = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Slider_StepFrequency(global::Microsoft.UI.Xaml.Controls.Slider obj, global::System.Double value)
            {
                obj.StepFrequency = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_SmallChange(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.SmallChange = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class SliderPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISliderPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.SliderPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj9;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj11;
            private global::Microsoft.UI.Xaml.Controls.Slider obj21;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj22;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj23;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj24;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj25;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj26;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj27;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj29;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj11ValueDisabled = false;
            private static bool isobj21MinimumDisabled = false;
            private static bool isobj21MaximumDisabled = false;
            private static bool isobj21StepFrequencyDisabled = false;
            private static bool isobj21SmallChangeDisabled = false;
            private static bool isobj22TextDisabled = false;
            private static bool isobj23ValueDisabled = false;
            private static bool isobj24ValueDisabled = false;
            private static bool isobj25ValueDisabled = false;
            private static bool isobj26ValueDisabled = false;
            private static bool isobj27ValueDisabled = false;
            private static bool isobj29TextDisabled = false;

            private SliderPage_obj1_BindingsTracking bindingsTracking;

            public SliderPage_obj1_Bindings()
            {
                this.bindingsTracking = new SliderPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 126 && columnNumber == 28)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 93 && columnNumber == 28)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 115 && columnNumber == 65)
                {
                    isobj11ValueDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 82)
                {
                    isobj21MinimumDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 29)
                {
                    isobj21MaximumDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 80)
                {
                    isobj21StepFrequencyDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 29)
                {
                    isobj21SmallChangeDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 28)
                {
                    isobj22TextDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 70)
                {
                    isobj23ValueDisabled = true;
                }
                else if (lineNumber == 80 && columnNumber == 70)
                {
                    isobj24ValueDisabled = true;
                }
                else if (lineNumber == 81 && columnNumber == 76)
                {
                    isobj25ValueDisabled = true;
                }
                else if (lineNumber == 82 && columnNumber == 74)
                {
                    isobj26ValueDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 63)
                {
                    isobj27ValueDisabled = true;
                }
                else if (lineNumber == 24 && columnNumber == 28)
                {
                    isobj29TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // ControlPages\SliderPage.xaml line 126
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 9: // ControlPages\SliderPage.xaml line 93
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 11: // ControlPages\SliderPage.xaml line 115
                        this.obj11 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 21: // ControlPages\SliderPage.xaml line 64
                        this.obj21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                        break;
                    case 22: // ControlPages\SliderPage.xaml line 70
                        this.obj22 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 23: // ControlPages\SliderPage.xaml line 79
                        this.obj23 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 24: // ControlPages\SliderPage.xaml line 80
                        this.obj24 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 25: // ControlPages\SliderPage.xaml line 81
                        this.obj25 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 26: // ControlPages\SliderPage.xaml line 82
                        this.obj26 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 27: // ControlPages\SliderPage.xaml line 83
                        this.obj27 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 29: // ControlPages\SliderPage.xaml line 24
                        this.obj29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISliderPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.SliderPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_Slider4_Value_M_ToString_371857150(int phase)
            {
                global::System.String result = this.dataRoot.Slider4.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 126
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, result, null);
                    }
                }
            }

            private void Invoke_Slider3_Value_M_ToString_371857150(int phase)
            {
                global::System.String result = this.dataRoot.Slider3.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 93
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, result, null);
                    }
                }
            }

            private void Invoke_Slider2_Value_M_ToString_371857150(int phase)
            {
                global::System.String result = this.dataRoot.Slider2.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 70
                    if (!isobj22TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj22, result, null);
                    }
                }
            }

            private void Invoke_Slider1_Value_M_ToString_371857150(int phase)
            {
                global::System.String result = this.dataRoot.Slider1.Value.ToString();
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 24
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj29, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.SliderPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider4(obj.Slider4, phase);
                        this.Update_Slider3(obj.Slider3, phase);
                        this.Update_SnapsToRadioButtons(obj.SnapsToRadioButtons, phase);
                        this.Update_MinimumValue(obj.MinimumValue, phase);
                        this.Update_MaximumValue(obj.MaximumValue, phase);
                        this.Update_StepFrequencyValue(obj.StepFrequencyValue, phase);
                        this.Update_SmallChangeValue(obj.SmallChangeValue, phase);
                        this.Update_Slider2(obj.Slider2, phase);
                        this.Update_Slider1(obj.Slider1, phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_Slider4(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider4(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider4_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider4_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider4_Value_M_ToString_371857150(phase);
                }
            }
            private void Update_Slider4_Value_M_ToString_371857150(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj7TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider4_Value_M_ToString_371857150"] = new InvokeFunctionDelegate(this.Invoke_Slider4_Value_M_ToString_371857150); 
                    }
                }
            }
            private void Update_Slider3(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider3(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider3_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider3_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider3_Value_M_ToString_371857150(phase);
                }
            }
            private void Update_Slider3_Value_M_ToString_371857150(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj9TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider3_Value_M_ToString_371857150"] = new InvokeFunctionDelegate(this.Invoke_Slider3_Value_M_ToString_371857150); 
                    }
                }
            }
            private void Update_SnapsToRadioButtons(global::Microsoft.UI.Xaml.Controls.RadioButtons obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SnapsToRadioButtons(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SnapsToRadioButtons_SelectedItem(obj.SelectedItem, phase);
                    }
                }
            }
            private void Update_SnapsToRadioButtons_SelectedItem(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 115
                    if (!isobj11ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj11, obj, null);
                    }
                }
            }
            private void Update_MinimumValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_MinimumValue(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MinimumValue_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_MinimumValue_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 64
                    if (!isobj21MinimumDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Minimum(this.obj21, obj);
                    }
                    // ControlPages\SliderPage.xaml line 79
                    if (!isobj23ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj23, obj, null);
                    }
                }
            }
            private void Update_MaximumValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_MaximumValue(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MaximumValue_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_MaximumValue_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 64
                    if (!isobj21MaximumDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_Maximum(this.obj21, obj);
                    }
                    // ControlPages\SliderPage.xaml line 80
                    if (!isobj24ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj24, obj, null);
                    }
                }
            }
            private void Update_StepFrequencyValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_StepFrequencyValue(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_StepFrequencyValue_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_StepFrequencyValue_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 64
                    if (!isobj21StepFrequencyDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Slider_StepFrequency(this.obj21, obj);
                    }
                    // ControlPages\SliderPage.xaml line 81
                    if (!isobj25ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj25, obj, null);
                    }
                }
            }
            private void Update_SmallChangeValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SmallChangeValue(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SmallChangeValue_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_SmallChangeValue_Value(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 64
                    if (!isobj21SmallChangeDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_RangeBase_SmallChange(this.obj21, obj);
                    }
                    // ControlPages\SliderPage.xaml line 82
                    if (!isobj26ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj26, obj, null);
                    }
                }
            }
            private void Update_Slider2(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider2(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider2_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider2_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider2_Value_M_ToString_371857150(phase);
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\SliderPage.xaml line 83
                    if (!isobj27ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj27, obj, null);
                    }
                }
            }
            private void Update_Slider2_Value_M_ToString_371857150(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj22TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider2_Value_M_ToString_371857150"] = new InvokeFunctionDelegate(this.Invoke_Slider2_Value_M_ToString_371857150); 
                    }
                }
            }
            private void Update_Slider1(global::Microsoft.UI.Xaml.Controls.Slider obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Slider1(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Slider1_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_Slider1_Value(global::System.Double obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_Slider1_Value_M_ToString_371857150(phase);
                }
            }
            private void Update_Slider1_Value_M_ToString_371857150(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj29TextDisabled)
                    {
                        this.PendingFunctionBindings["Slider1_Value_M_ToString_371857150"] = new InvokeFunctionDelegate(this.Invoke_Slider1_Value_M_ToString_371857150); 
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SliderPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SliderPage_obj1_Bindings> weakRefToBindingObj; 

                public SliderPage_obj1_BindingsTracking(SliderPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SliderPage_obj1_Bindings>(obj);
                }

                public SliderPage_obj1_Bindings TryGetBindingObject()
                {
                    SliderPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_Slider4(null);
                    UpdateChildListeners_Slider3(null);
                    UpdateChildListeners_SnapsToRadioButtons(null);
                    UpdateChildListeners_MinimumValue(null);
                    UpdateChildListeners_MaximumValue(null);
                    UpdateChildListeners_StepFrequencyValue(null);
                    UpdateChildListeners_SmallChangeValue(null);
                    UpdateChildListeners_Slider2(null);
                    UpdateChildListeners_Slider1(null);
                }

                public void DependencyPropertyChanged_Slider4_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider4_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider4 = null;
                private long tokenDPC_Slider4_Value = 0;
                public void UpdateChildListeners_Slider4(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider4)
                    {
                        if (cache_Slider4 != null)
                        {
                            cache_Slider4.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider4_Value);
                            cache_Slider4 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider4 = obj;
                            tokenDPC_Slider4_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider4_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_Slider3_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider3_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider3 = null;
                private long tokenDPC_Slider3_Value = 0;
                public void UpdateChildListeners_Slider3(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider3)
                    {
                        if (cache_Slider3 != null)
                        {
                            cache_Slider3.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider3_Value);
                            cache_Slider3 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider3 = obj;
                            tokenDPC_Slider3_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider3_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_SnapsToRadioButtons_SelectedItem(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.RadioButtons obj = sender as global::Microsoft.UI.Xaml.Controls.RadioButtons;
                        if (obj != null)
                        {
                            bindings.Update_SnapsToRadioButtons_SelectedItem(obj.SelectedItem, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.RadioButtons cache_SnapsToRadioButtons = null;
                private long tokenDPC_SnapsToRadioButtons_SelectedItem = 0;
                public void UpdateChildListeners_SnapsToRadioButtons(global::Microsoft.UI.Xaml.Controls.RadioButtons obj)
                {
                    if (obj != cache_SnapsToRadioButtons)
                    {
                        if (cache_SnapsToRadioButtons != null)
                        {
                            cache_SnapsToRadioButtons.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItemProperty, tokenDPC_SnapsToRadioButtons_SelectedItem);
                            cache_SnapsToRadioButtons = null;
                        }
                        if (obj != null)
                        {
                            cache_SnapsToRadioButtons = obj;
                            tokenDPC_SnapsToRadioButtons_SelectedItem = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.RadioButtons.SelectedItemProperty, DependencyPropertyChanged_SnapsToRadioButtons_SelectedItem);
                        }
                    }
                }
                public void DependencyPropertyChanged_MinimumValue_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_MinimumValue_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_MinimumValue = null;
                private long tokenDPC_MinimumValue_Value = 0;
                public void UpdateChildListeners_MinimumValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_MinimumValue)
                    {
                        if (cache_MinimumValue != null)
                        {
                            cache_MinimumValue.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_MinimumValue_Value);
                            cache_MinimumValue = null;
                        }
                        if (obj != null)
                        {
                            cache_MinimumValue = obj;
                            tokenDPC_MinimumValue_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_MinimumValue_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_MaximumValue_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_MaximumValue_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_MaximumValue = null;
                private long tokenDPC_MaximumValue_Value = 0;
                public void UpdateChildListeners_MaximumValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_MaximumValue)
                    {
                        if (cache_MaximumValue != null)
                        {
                            cache_MaximumValue.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_MaximumValue_Value);
                            cache_MaximumValue = null;
                        }
                        if (obj != null)
                        {
                            cache_MaximumValue = obj;
                            tokenDPC_MaximumValue_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_MaximumValue_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_StepFrequencyValue_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_StepFrequencyValue_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_StepFrequencyValue = null;
                private long tokenDPC_StepFrequencyValue_Value = 0;
                public void UpdateChildListeners_StepFrequencyValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_StepFrequencyValue)
                    {
                        if (cache_StepFrequencyValue != null)
                        {
                            cache_StepFrequencyValue.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_StepFrequencyValue_Value);
                            cache_StepFrequencyValue = null;
                        }
                        if (obj != null)
                        {
                            cache_StepFrequencyValue = obj;
                            tokenDPC_StepFrequencyValue_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_StepFrequencyValue_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_SmallChangeValue_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.NumberBox obj = sender as global::Microsoft.UI.Xaml.Controls.NumberBox;
                        if (obj != null)
                        {
                            bindings.Update_SmallChangeValue_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.NumberBox cache_SmallChangeValue = null;
                private long tokenDPC_SmallChangeValue_Value = 0;
                public void UpdateChildListeners_SmallChangeValue(global::Microsoft.UI.Xaml.Controls.NumberBox obj)
                {
                    if (obj != cache_SmallChangeValue)
                    {
                        if (cache_SmallChangeValue != null)
                        {
                            cache_SmallChangeValue.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, tokenDPC_SmallChangeValue_Value);
                            cache_SmallChangeValue = null;
                        }
                        if (obj != null)
                        {
                            cache_SmallChangeValue = obj;
                            tokenDPC_SmallChangeValue_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.NumberBox.ValueProperty, DependencyPropertyChanged_SmallChangeValue_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_Slider2_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider2_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider2 = null;
                private long tokenDPC_Slider2_Value = 0;
                public void UpdateChildListeners_Slider2(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider2)
                    {
                        if (cache_Slider2 != null)
                        {
                            cache_Slider2.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider2_Value);
                            cache_Slider2 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider2 = obj;
                            tokenDPC_Slider2_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider2_Value);
                        }
                    }
                }
                public void DependencyPropertyChanged_Slider1_Value(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    SliderPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.Slider obj = sender as global::Microsoft.UI.Xaml.Controls.Slider;
                        if (obj != null)
                        {
                            bindings.Update_Slider1_Value(obj.Value, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.Slider cache_Slider1 = null;
                private long tokenDPC_Slider1_Value = 0;
                public void UpdateChildListeners_Slider1(global::Microsoft.UI.Xaml.Controls.Slider obj)
                {
                    if (obj != cache_Slider1)
                    {
                        if (cache_Slider1 != null)
                        {
                            cache_Slider1.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, tokenDPC_Slider1_Value);
                            cache_Slider1 = null;
                        }
                        if (obj != null)
                        {
                            cache_Slider1 = obj;
                            tokenDPC_Slider1_Value = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, DependencyPropertyChanged_Slider1_Value);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\SliderPage.xaml line 19
                {
                    this.Example1 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 3: // ControlPages\SliderPage.xaml line 34
                {
                    this.Example2 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 4: // ControlPages\SliderPage.xaml line 88
                {
                    this.Example3 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 5: // ControlPages\SliderPage.xaml line 120
                {
                    this.Example4 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 6: // ControlPages\SliderPage.xaml line 122
                {
                    this.Slider4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 8: // ControlPages\SliderPage.xaml line 90
                {
                    this.Slider3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 10: // ControlPages\SliderPage.xaml line 97
                {
                    this.SnapsToRadioButtons = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButtons>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButtons)this.SnapsToRadioButtons).SelectionChanged += this.SnapsToRadioButtons_SelectionChanged;
                }
                break;
            case 12: // ControlPages\SliderPage.xaml line 49
                {
                    this.MinimumLabel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 13: // ControlPages\SliderPage.xaml line 50
                {
                    this.MinimumValue = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                }
                break;
            case 14: // ControlPages\SliderPage.xaml line 52
                {
                    this.MaximumLabel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 15: // ControlPages\SliderPage.xaml line 53
                {
                    this.MaximumValue = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                }
                break;
            case 16: // ControlPages\SliderPage.xaml line 55
                {
                    this.StepFrequencyLabel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 17: // ControlPages\SliderPage.xaml line 56
                {
                    this.StepFrequencyValue = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                }
                break;
            case 18: // ControlPages\SliderPage.xaml line 58
                {
                    this.SmallChangeLabel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 19: // ControlPages\SliderPage.xaml line 59
                {
                    this.SmallChangeValue = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.NumberBox>(target);
                }
                break;
            case 20: // ControlPages\SliderPage.xaml line 63
                {
                    this.Control2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 21: // ControlPages\SliderPage.xaml line 64
                {
                    this.Slider2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            case 28: // ControlPages\SliderPage.xaml line 21
                {
                    this.Slider1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Slider>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\SliderPage.xaml line 12
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SliderPage_obj1_Bindings bindings = new SliderPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

