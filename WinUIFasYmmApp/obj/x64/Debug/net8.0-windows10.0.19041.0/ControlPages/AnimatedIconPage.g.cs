#pragma checksum "C:\Users\sabri\Desktop\FasWebAPI\dev2ninovasyon\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\AnimatedIconPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "1AC85C213FF0382C00BEB3DB120A839EE737076B2726E348FC2C5E59A2DC1C1E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class AnimatedIconPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_AnimatedIcon_Source(global::Microsoft.UI.Xaml.Controls.AnimatedIcon obj, global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class AnimatedIconPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IAnimatedIconPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.AnimatedIconPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.AnimatedIcon obj6;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj8;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6SourceDisabled = false;
            private static bool isobj8ValueDisabled = false;

            private AnimatedIconPage_obj1_BindingsTracking bindingsTracking;

            public AnimatedIconPage_obj1_Bindings()
            {
                this.bindingsTracking = new AnimatedIconPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 25 && columnNumber == 67)
                {
                    isobj6SourceDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 82)
                {
                    isobj8ValueDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // ControlPages\AnimatedIconPage.xaml line 25
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AnimatedIcon>(target);
                        break;
                    case 8: // ControlPages\AnimatedIconPage.xaml line 45
                        this.obj8 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IAnimatedIconPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.AnimatedIconPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private bool TryGet_AnimatedVisualSourceSelection_SelectedItem(out global::System.Object val)
            {
                global::Microsoft.UI.Xaml.Controls.ComboBox obj;
                if (TryGet_AnimatedVisualSourceSelection(out obj) && obj != null)
                {
                    val = obj.SelectedItem;
                    return true;
                }
                else
                {
                    val = default(global::System.Object);
                    return false;
                }
            }

            private bool TryGet_AnimatedVisualSourceSelection(out global::Microsoft.UI.Xaml.Controls.ComboBox val)
            {
                global::WinUIFasYmmApp.ControlPages.AnimatedIconPage obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.AnimatedVisualSourceSelection;
                    return true;
                }
                else
                {
                    val = default(global::Microsoft.UI.Xaml.Controls.ComboBox);
                    return false;
                }
            }

            private bool TryGet_(out global::WinUIFasYmmApp.ControlPages.AnimatedIconPage val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_WinUIFasYmmApp_ControlPages_AnimatedIconPage_M_GetAnimationSourceFromString_849253093(int phase)
            {
                global::System.Object p0;
                if (!TryGet_AnimatedVisualSourceSelection_SelectedItem(out p0)) { return; }
                global::Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2 result = global::WinUIFasYmmApp.ControlPages.AnimatedIconPage.GetAnimationSourceFromString(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\AnimatedIconPage.xaml line 25
                    if (!isobj6SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_AnimatedIcon_Source(this.obj6, result, null);
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.AnimatedIconPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AnimatedVisualSourceSelection(obj.AnimatedVisualSourceSelection, phase);
                    }
                }
                this.Update_WinUIFasYmmApp_ControlPages_AnimatedIconPage_M_GetAnimationSourceFromString_849253093(phase);
                this.CompleteUpdate(phase);
            }
            private void Update_AnimatedVisualSourceSelection(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_AnimatedVisualSourceSelection(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_AnimatedVisualSourceSelection_SelectedItem(obj.SelectedItem, phase);
                    }
                }
            }
            private void Update_AnimatedVisualSourceSelection_SelectedItem(global::System.Object obj, int phase)
            {
                if (obj != null)
                {
                    this.Update_WinUIFasYmmApp_ControlPages_AnimatedIconPage_M_GetAnimationSourceFromString_849253093(phase);
                }
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\AnimatedIconPage.xaml line 45
                    if (!isobj8ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj8, obj, null);
                    }
                }
            }
            private void Update_WinUIFasYmmApp_ControlPages_AnimatedIconPage_M_GetAnimationSourceFromString_849253093(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj6SourceDisabled)
                    {
                        this.PendingFunctionBindings["WinUIFasYmmApp_ControlPages_AnimatedIconPage_M_GetAnimationSourceFromString_849253093"] = new InvokeFunctionDelegate(this.Invoke_WinUIFasYmmApp_ControlPages_AnimatedIconPage_M_GetAnimationSourceFromString_849253093); 
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AnimatedIconPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AnimatedIconPage_obj1_Bindings> weakRefToBindingObj; 

                public AnimatedIconPage_obj1_BindingsTracking(AnimatedIconPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AnimatedIconPage_obj1_Bindings>(obj);
                }

                public AnimatedIconPage_obj1_Bindings TryGetBindingObject()
                {
                    AnimatedIconPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_AnimatedVisualSourceSelection(null);
                }

                public void DependencyPropertyChanged_AnimatedVisualSourceSelection_SelectedItem(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    AnimatedIconPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_AnimatedVisualSourceSelection_SelectedItem(obj.SelectedItem, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_AnimatedVisualSourceSelection = null;
                private long tokenDPC_AnimatedVisualSourceSelection_SelectedItem = 0;
                public void UpdateChildListeners_AnimatedVisualSourceSelection(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_AnimatedVisualSourceSelection)
                    {
                        if (cache_AnimatedVisualSourceSelection != null)
                        {
                            cache_AnimatedVisualSourceSelection.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, tokenDPC_AnimatedVisualSourceSelection_SelectedItem);
                            cache_AnimatedVisualSourceSelection = null;
                        }
                        if (obj != null)
                        {
                            cache_AnimatedVisualSourceSelection = obj;
                            tokenDPC_AnimatedVisualSourceSelection_SelectedItem = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, DependencyPropertyChanged_AnimatedVisualSourceSelection_SelectedItem);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\AnimatedIconPage.xaml line 12
                {
                    this.AnimatedIconExample1 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 3: // ControlPages\AnimatedIconPage.xaml line 48
                {
                    this.AnimatedIconExample2 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 4: // ControlPages\AnimatedIconPage.xaml line 58
                {
                    this.GameSettingsIcon = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AnimatedIcon>(target);
                }
                break;
            case 5: // ControlPages\AnimatedIconPage.xaml line 24
                {
                    global::Microsoft.UI.Xaml.Controls.Button element5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element5).PointerEntered += this.Button_PointerEntered;
                    ((global::Microsoft.UI.Xaml.Controls.Button)element5).PointerExited += this.Button_PointerExited;
                }
                break;
            case 6: // ControlPages\AnimatedIconPage.xaml line 25
                {
                    this.SearchAnimatedIcon = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AnimatedIcon>(target);
                }
                break;
            case 7: // ControlPages\AnimatedIconPage.xaml line 34
                {
                    this.AnimatedVisualSourceSelection = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\AnimatedIconPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    AnimatedIconPage_obj1_Bindings bindings = new AnimatedIconPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

