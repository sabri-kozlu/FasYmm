<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="WinUIFasYmmApp.ControlPages.SoundPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:WinUIFasYmmApp"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <StackPanel>
        <local:ControlExample x:ConnectionId='2' x:Name="Example1" HeaderText="Toggling Sound">
            <ToggleSwitch x:ConnectionId='13' x:Name="soundToggle" OffContent="Sound Off" OnContent="Sound On"                              />
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
ElementSoundPlayer.State = ElementSoundPlayerState.Off;
ElementSoundPlayer.State = ElementSoundPlayerState.On;
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
        <local:ControlExample x:ConnectionId='3' x:Name="Example2" HeaderText="Toggling Spatial Audio">
            <StackPanel Orientation="Vertical">
                <CheckBox x:ConnectionId='12' x:Name="spatialAudioBox" IsEnabled="False" Content="Enable Spatial Audio"                                                                        />
                <TextBlock Margin="0,5,0,0" Text="Can only enable spatial audio when sound is on!" Foreground="{ThemeResource SystemColorHotlightColor}" Style="{ThemeResource CaptionTextBlockStyle}" FontStyle="Italic"/>
            </StackPanel>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
ElementSoundPlayer.State = ElementSoundPlayerState.On;
ElementSoundPlayer.SpatialAudioMode = ElementSpatialAudioMode.On
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
        <local:ControlExample x:ConnectionId='4' x:Name="Example3" HeaderText="Play Specific System Sound">
            <StackPanel Orientation="Vertical" Spacing="5">
                <Button x:ConnectionId='5' Content="&#x25B6; Focus" ElementSoundMode="Off" Tag="0"                     />
                <Button x:ConnectionId='6' Content="&#x25B6; Invoke" ElementSoundMode="Off" Tag="1"                     />
                <Button x:ConnectionId='7' Content="&#x25B6; Show" ElementSoundMode="Off" Tag="2"                     />
                <Button x:ConnectionId='8' Content="&#x25B6; Hide" ElementSoundMode="Off" Tag="3"                     />
                <Button x:ConnectionId='9' Content="&#x25B6; MovePrevious" ElementSoundMode="Off" Tag="4"                     />
                <Button x:ConnectionId='10' Content="&#x25B6; MoveNext" ElementSoundMode="Off" Tag="5"                     />
                <Button x:ConnectionId='11' Content="&#x25B6; GoBack" ElementSoundMode="Off" Tag="6"                     />
            </StackPanel>
 
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
ElementSoundPlayer.State = ElementSoundPlayerState.On;

ElementSoundPlayer.Play(ElementSoundKind.Focus);
ElementSoundPlayer.Play(ElementSoundKind.Invoke);
ElementSoundPlayer.Play(ElementSoundKind.Show);
ElementSoundPlayer.Play(ElementSoundKind.Hide);
ElementSoundPlayer.Play(ElementSoundKind.MovePrevious);
ElementSoundPlayer.Play(ElementSoundKind.MoveNext);
ElementSoundPlayer.Play(ElementSoundKind.GoBack);
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
    </StackPanel>
</Page>

