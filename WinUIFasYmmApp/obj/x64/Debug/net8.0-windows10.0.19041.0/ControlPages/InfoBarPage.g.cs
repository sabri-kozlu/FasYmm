#pragma checksum "C:\Users\sabri\Desktop\FasWebAPI\dev2ninovasyon\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\InfoBarPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "4370AEBBA38CEE6548AF4CB55A5CAC2166DA5E8B58CFE507543C78D32DB71B71"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class InfoBarPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class InfoBarPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IInfoBarPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.InfoBarPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj6;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj7;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj8;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj9;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj10;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj11;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj13;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj16;
            private global::Microsoft.UI.Xaml.Controls.CheckBox obj20;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj22;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj23;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6IsCheckedDisabled = false;
            private static bool isobj7IsCheckedDisabled = false;
            private static bool isobj8IsCheckedDisabled = false;
            private static bool isobj9ValueDisabled = false;
            private static bool isobj10ValueDisabled = false;
            private static bool isobj11ValueDisabled = false;
            private static bool isobj13ValueDisabled = false;
            private static bool isobj16IsCheckedDisabled = false;
            private static bool isobj20IsCheckedDisabled = false;
            private static bool isobj22ValueDisabled = false;
            private static bool isobj23ValueDisabled = false;

            private InfoBarPage_obj1_BindingsTracking bindingsTracking;

            public InfoBarPage_obj1_Bindings()
            {
                this.bindingsTracking = new InfoBarPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 99 && columnNumber == 74)
                {
                    isobj6IsCheckedDisabled = true;
                }
                else if (lineNumber == 100 && columnNumber == 88)
                {
                    isobj7IsCheckedDisabled = true;
                }
                else if (lineNumber == 101 && columnNumber == 81)
                {
                    isobj8IsCheckedDisabled = true;
                }
                else if (lineNumber == 115 && columnNumber == 64)
                {
                    isobj9ValueDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 71)
                {
                    isobj10ValueDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 68)
                {
                    isobj11ValueDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 64)
                {
                    isobj13ValueDisabled = true;
                }
                else if (lineNumber == 65 && columnNumber == 74)
                {
                    isobj16IsCheckedDisabled = true;
                }
                else if (lineNumber == 30 && columnNumber == 74)
                {
                    isobj20IsCheckedDisabled = true;
                }
                else if (lineNumber == 50 && columnNumber == 66)
                {
                    isobj22ValueDisabled = true;
                }
                else if (lineNumber == 51 && columnNumber == 64)
                {
                    isobj23ValueDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // ControlPages\InfoBarPage.xaml line 99
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_6(this.obj6);
                        break;
                    case 7: // ControlPages\InfoBarPage.xaml line 100
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_7(this.obj7);
                        break;
                    case 8: // ControlPages\InfoBarPage.xaml line 101
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // ControlPages\InfoBarPage.xaml line 115
                        this.obj9 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 10: // ControlPages\InfoBarPage.xaml line 116
                        this.obj10 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 11: // ControlPages\InfoBarPage.xaml line 117
                        this.obj11 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 13: // ControlPages\InfoBarPage.xaml line 59
                        this.obj13 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 16: // ControlPages\InfoBarPage.xaml line 65
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_16(this.obj16);
                        break;
                    case 20: // ControlPages\InfoBarPage.xaml line 30
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_20(this.obj20);
                        break;
                    case 22: // ControlPages\InfoBarPage.xaml line 50
                        this.obj22 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 23: // ControlPages\InfoBarPage.xaml line 51
                        this.obj23 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IInfoBarPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.InfoBarPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.InfoBarPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TestInfoBar3(obj.TestInfoBar3, phase);
                        this.Update_IsOpenCheckBox3(obj.IsOpenCheckBox3, phase);
                        this.Update_IsIconVisibleCheckBox(obj.IsIconVisibleCheckBox, phase);
                        this.Update_IsClosableCheckBox(obj.IsClosableCheckBox, phase);
                        this.Update_IsOpenCheckBox2(obj.IsOpenCheckBox2, phase);
                        this.Update_TestInfoBar2(obj.TestInfoBar2, phase);
                        this.Update_TestInfoBar1(obj.TestInfoBar1, phase);
                        this.Update_SeverityComboBox(obj.SeverityComboBox, phase);
                        this.Update_IsOpenCheckBox1(obj.IsOpenCheckBox1, phase);
                    }
                }
            }
            private void Update_TestInfoBar3(global::Microsoft.UI.Xaml.Controls.InfoBar obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_TestInfoBar3(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TestInfoBar3_IsOpen(obj.IsOpen, phase);
                        this.Update_TestInfoBar3_IsIconVisible(obj.IsIconVisible, phase);
                        this.Update_TestInfoBar3_IsClosable(obj.IsClosable, phase);
                    }
                }
            }
            private void Update_TestInfoBar3_IsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 99
                    if (!isobj6IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj6, obj, null);
                    }
                }
            }
            private void Update_TestInfoBar3_IsIconVisible(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 100
                    if (!isobj7IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj7, obj, null);
                    }
                }
            }
            private void Update_TestInfoBar3_IsClosable(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 101
                    if (!isobj8IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj8, obj, null);
                    }
                }
            }
            private void Update_IsOpenCheckBox3(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_IsOpenCheckBox3(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsOpenCheckBox3_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_IsOpenCheckBox3_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsOpenCheckBox3_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_IsOpenCheckBox3_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 115
                    if (!isobj9ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj9, obj, null);
                    }
                }
            }
            private void Update_IsIconVisibleCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_IsIconVisibleCheckBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsIconVisibleCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_IsIconVisibleCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsIconVisibleCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_IsIconVisibleCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 116
                    if (!isobj10ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj10, obj, null);
                    }
                }
            }
            private void Update_IsClosableCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_IsClosableCheckBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsClosableCheckBox_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_IsClosableCheckBox_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsClosableCheckBox_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_IsClosableCheckBox_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 117
                    if (!isobj11ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj11, obj, null);
                    }
                }
            }
            private void Update_IsOpenCheckBox2(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_IsOpenCheckBox2(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsOpenCheckBox2_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_IsOpenCheckBox2_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsOpenCheckBox2_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_IsOpenCheckBox2_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 59
                    if (!isobj13ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj13, obj, null);
                    }
                }
            }
            private void Update_TestInfoBar2(global::Microsoft.UI.Xaml.Controls.InfoBar obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_TestInfoBar2(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TestInfoBar2_IsOpen(obj.IsOpen, phase);
                    }
                }
            }
            private void Update_TestInfoBar2_IsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 65
                    if (!isobj16IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj16, obj, null);
                    }
                }
            }
            private void Update_TestInfoBar1(global::Microsoft.UI.Xaml.Controls.InfoBar obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_TestInfoBar1(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TestInfoBar1_IsOpen(obj.IsOpen, phase);
                    }
                }
            }
            private void Update_TestInfoBar1_IsOpen(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 30
                    if (!isobj20IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj20, obj, null);
                    }
                }
            }
            private void Update_SeverityComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SeverityComboBox(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SeverityComboBox_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_SeverityComboBox_SelectedValue(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 50
                    if (!isobj22ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj22, obj, null);
                    }
                }
            }
            private void Update_IsOpenCheckBox1(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_IsOpenCheckBox1(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsOpenCheckBox1_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_IsOpenCheckBox1_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsOpenCheckBox1_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_IsOpenCheckBox1_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\InfoBarPage.xaml line 51
                    if (!isobj23ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj23, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_6_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.TestInfoBar3 != null)
                        {
                            this.dataRoot.TestInfoBar3.IsOpen = (global::System.Boolean)this.obj6.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_7_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.TestInfoBar3 != null)
                        {
                            this.dataRoot.TestInfoBar3.IsIconVisible = (global::System.Boolean)this.obj7.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_8_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.TestInfoBar3 != null)
                        {
                            this.dataRoot.TestInfoBar3.IsClosable = (global::System.Boolean)this.obj8.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_16_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.TestInfoBar2 != null)
                        {
                            this.dataRoot.TestInfoBar2.IsOpen = (global::System.Boolean)this.obj16.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_20_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.TestInfoBar1 != null)
                        {
                            this.dataRoot.TestInfoBar1.IsOpen = (global::System.Boolean)this.obj20.IsChecked;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class InfoBarPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<InfoBarPage_obj1_Bindings> weakRefToBindingObj; 

                public InfoBarPage_obj1_BindingsTracking(InfoBarPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<InfoBarPage_obj1_Bindings>(obj);
                }

                public InfoBarPage_obj1_Bindings TryGetBindingObject()
                {
                    InfoBarPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_TestInfoBar3(null);
                    UpdateChildListeners_IsOpenCheckBox3(null);
                    UpdateChildListeners_IsIconVisibleCheckBox(null);
                    UpdateChildListeners_IsClosableCheckBox(null);
                    UpdateChildListeners_IsOpenCheckBox2(null);
                    UpdateChildListeners_TestInfoBar2(null);
                    UpdateChildListeners_TestInfoBar1(null);
                    UpdateChildListeners_SeverityComboBox(null);
                    UpdateChildListeners_IsOpenCheckBox1(null);
                }

                public void DependencyPropertyChanged_TestInfoBar3_IsOpen(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_TestInfoBar3_IsOpen(obj.IsOpen, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_TestInfoBar3_IsIconVisible(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_TestInfoBar3_IsIconVisible(obj.IsIconVisible, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_TestInfoBar3_IsClosable(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_TestInfoBar3_IsClosable(obj.IsClosable, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.InfoBar cache_TestInfoBar3 = null;
                private long tokenDPC_TestInfoBar3_IsOpen = 0;
                private long tokenDPC_TestInfoBar3_IsIconVisible = 0;
                private long tokenDPC_TestInfoBar3_IsClosable = 0;
                public void UpdateChildListeners_TestInfoBar3(global::Microsoft.UI.Xaml.Controls.InfoBar obj)
                {
                    if (obj != cache_TestInfoBar3)
                    {
                        if (cache_TestInfoBar3 != null)
                        {
                            cache_TestInfoBar3.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, tokenDPC_TestInfoBar3_IsOpen);
                            cache_TestInfoBar3.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisibleProperty, tokenDPC_TestInfoBar3_IsIconVisible);
                            cache_TestInfoBar3.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsClosableProperty, tokenDPC_TestInfoBar3_IsClosable);
                            cache_TestInfoBar3 = null;
                        }
                        if (obj != null)
                        {
                            cache_TestInfoBar3 = obj;
                            tokenDPC_TestInfoBar3_IsOpen = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, DependencyPropertyChanged_TestInfoBar3_IsOpen);
                            tokenDPC_TestInfoBar3_IsIconVisible = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisibleProperty, DependencyPropertyChanged_TestInfoBar3_IsIconVisible);
                            tokenDPC_TestInfoBar3_IsClosable = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsClosableProperty, DependencyPropertyChanged_TestInfoBar3_IsClosable);
                        }
                    }
                }
                public void DependencyPropertyChanged_IsOpenCheckBox3_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_IsOpenCheckBox3_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_IsOpenCheckBox3 = null;
                private long tokenDPC_IsOpenCheckBox3_IsChecked = 0;
                public void UpdateChildListeners_IsOpenCheckBox3(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_IsOpenCheckBox3)
                    {
                        if (cache_IsOpenCheckBox3 != null)
                        {
                            cache_IsOpenCheckBox3.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_IsOpenCheckBox3_IsChecked);
                            cache_IsOpenCheckBox3 = null;
                        }
                        if (obj != null)
                        {
                            cache_IsOpenCheckBox3 = obj;
                            tokenDPC_IsOpenCheckBox3_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_IsOpenCheckBox3_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_IsIconVisibleCheckBox_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_IsIconVisibleCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_IsIconVisibleCheckBox = null;
                private long tokenDPC_IsIconVisibleCheckBox_IsChecked = 0;
                public void UpdateChildListeners_IsIconVisibleCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_IsIconVisibleCheckBox)
                    {
                        if (cache_IsIconVisibleCheckBox != null)
                        {
                            cache_IsIconVisibleCheckBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_IsIconVisibleCheckBox_IsChecked);
                            cache_IsIconVisibleCheckBox = null;
                        }
                        if (obj != null)
                        {
                            cache_IsIconVisibleCheckBox = obj;
                            tokenDPC_IsIconVisibleCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_IsIconVisibleCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_IsClosableCheckBox_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_IsClosableCheckBox_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_IsClosableCheckBox = null;
                private long tokenDPC_IsClosableCheckBox_IsChecked = 0;
                public void UpdateChildListeners_IsClosableCheckBox(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_IsClosableCheckBox)
                    {
                        if (cache_IsClosableCheckBox != null)
                        {
                            cache_IsClosableCheckBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_IsClosableCheckBox_IsChecked);
                            cache_IsClosableCheckBox = null;
                        }
                        if (obj != null)
                        {
                            cache_IsClosableCheckBox = obj;
                            tokenDPC_IsClosableCheckBox_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_IsClosableCheckBox_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_IsOpenCheckBox2_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_IsOpenCheckBox2_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_IsOpenCheckBox2 = null;
                private long tokenDPC_IsOpenCheckBox2_IsChecked = 0;
                public void UpdateChildListeners_IsOpenCheckBox2(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_IsOpenCheckBox2)
                    {
                        if (cache_IsOpenCheckBox2 != null)
                        {
                            cache_IsOpenCheckBox2.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_IsOpenCheckBox2_IsChecked);
                            cache_IsOpenCheckBox2 = null;
                        }
                        if (obj != null)
                        {
                            cache_IsOpenCheckBox2 = obj;
                            tokenDPC_IsOpenCheckBox2_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_IsOpenCheckBox2_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_TestInfoBar2_IsOpen(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_TestInfoBar2_IsOpen(obj.IsOpen, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.InfoBar cache_TestInfoBar2 = null;
                private long tokenDPC_TestInfoBar2_IsOpen = 0;
                public void UpdateChildListeners_TestInfoBar2(global::Microsoft.UI.Xaml.Controls.InfoBar obj)
                {
                    if (obj != cache_TestInfoBar2)
                    {
                        if (cache_TestInfoBar2 != null)
                        {
                            cache_TestInfoBar2.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, tokenDPC_TestInfoBar2_IsOpen);
                            cache_TestInfoBar2 = null;
                        }
                        if (obj != null)
                        {
                            cache_TestInfoBar2 = obj;
                            tokenDPC_TestInfoBar2_IsOpen = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, DependencyPropertyChanged_TestInfoBar2_IsOpen);
                        }
                    }
                }
                public void DependencyPropertyChanged_TestInfoBar1_IsOpen(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.InfoBar obj = sender as global::Microsoft.UI.Xaml.Controls.InfoBar;
                        if (obj != null)
                        {
                            bindings.Update_TestInfoBar1_IsOpen(obj.IsOpen, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.InfoBar cache_TestInfoBar1 = null;
                private long tokenDPC_TestInfoBar1_IsOpen = 0;
                public void UpdateChildListeners_TestInfoBar1(global::Microsoft.UI.Xaml.Controls.InfoBar obj)
                {
                    if (obj != cache_TestInfoBar1)
                    {
                        if (cache_TestInfoBar1 != null)
                        {
                            cache_TestInfoBar1.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, tokenDPC_TestInfoBar1_IsOpen);
                            cache_TestInfoBar1 = null;
                        }
                        if (obj != null)
                        {
                            cache_TestInfoBar1 = obj;
                            tokenDPC_TestInfoBar1_IsOpen = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.InfoBar.IsOpenProperty, DependencyPropertyChanged_TestInfoBar1_IsOpen);
                        }
                    }
                }
                public void DependencyPropertyChanged_SeverityComboBox_SelectedValue(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_SeverityComboBox_SelectedValue(obj.SelectedValue, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_SeverityComboBox = null;
                private long tokenDPC_SeverityComboBox_SelectedValue = 0;
                public void UpdateChildListeners_SeverityComboBox(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_SeverityComboBox)
                    {
                        if (cache_SeverityComboBox != null)
                        {
                            cache_SeverityComboBox.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, tokenDPC_SeverityComboBox_SelectedValue);
                            cache_SeverityComboBox = null;
                        }
                        if (obj != null)
                        {
                            cache_SeverityComboBox = obj;
                            tokenDPC_SeverityComboBox_SelectedValue = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, DependencyPropertyChanged_SeverityComboBox_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_IsOpenCheckBox1_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    InfoBarPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_IsOpenCheckBox1_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_IsOpenCheckBox1 = null;
                private long tokenDPC_IsOpenCheckBox1_IsChecked = 0;
                public void UpdateChildListeners_IsOpenCheckBox1(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_IsOpenCheckBox1)
                    {
                        if (cache_IsOpenCheckBox1 != null)
                        {
                            cache_IsOpenCheckBox1.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_IsOpenCheckBox1_IsChecked);
                            cache_IsOpenCheckBox1 = null;
                        }
                        if (obj != null)
                        {
                            cache_IsOpenCheckBox1 = obj;
                            tokenDPC_IsOpenCheckBox1_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_IsOpenCheckBox1_IsChecked);
                        }
                    }
                }
                public void RegisterTwoWayListener_6(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_6_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_7(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_7_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_16(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_16_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_20(global::Microsoft.UI.Xaml.Controls.CheckBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_20_IsChecked();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\InfoBarPage.xaml line 19
                {
                    this.Example1 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 3: // ControlPages\InfoBarPage.xaml line 54
                {
                    this.Example2 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 4: // ControlPages\InfoBarPage.xaml line 88
                {
                    this.Example3 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 5: // ControlPages\InfoBarPage.xaml line 90
                {
                    this.TestInfoBar3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                }
                break;
            case 6: // ControlPages\InfoBarPage.xaml line 99
                {
                    this.IsOpenCheckBox3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 7: // ControlPages\InfoBarPage.xaml line 100
                {
                    this.IsIconVisibleCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 8: // ControlPages\InfoBarPage.xaml line 101
                {
                    this.IsClosableCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 12: // ControlPages\InfoBarPage.xaml line 56
                {
                    this.TestInfoBar2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                }
                break;
            case 14: // ControlPages\InfoBarPage.xaml line 60
                {
                    this.DisplayMessage = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                }
                break;
            case 15: // ControlPages\InfoBarPage.xaml line 61
                {
                    this.DisplayButton = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                }
                break;
            case 16: // ControlPages\InfoBarPage.xaml line 65
                {
                    this.IsOpenCheckBox2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 17: // ControlPages\InfoBarPage.xaml line 66
                {
                    this.MessageComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.MessageComboBox).SelectionChanged += this.MessageComboBox_SelectionChanged;
                }
                break;
            case 18: // ControlPages\InfoBarPage.xaml line 70
                {
                    this.ActionButtonComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.ActionButtonComboBox).SelectionChanged += this.ActionButtonComboBox_SelectionChanged;
                }
                break;
            case 19: // ControlPages\InfoBarPage.xaml line 21
                {
                    this.TestInfoBar1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.InfoBar>(target);
                }
                break;
            case 20: // ControlPages\InfoBarPage.xaml line 30
                {
                    this.IsOpenCheckBox1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 21: // ControlPages\InfoBarPage.xaml line 31
                {
                    this.SeverityComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.SeverityComboBox).SelectionChanged += this.SeverityComboBox_SelectionChanged;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\InfoBarPage.xaml line 12
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    InfoBarPage_obj1_Bindings bindings = new InfoBarPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

