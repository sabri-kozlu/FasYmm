#pragma checksum "C:\Users\sabri\Desktop\FasWebAPI\dev2ninovasyon\WinUIFasYmmAppV1\WinUIFasYmmApp\ControlPages\CalendarViewPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "978BB95C558F2273D48B4D1C55BA53FECF9503A9A49B4035069A0B345F06154D"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinUIFasYmmApp.ControlPages
{
    partial class CalendarViewPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_CalendarView_CalendarIdentifier(global::Microsoft.UI.Xaml.Controls.CalendarView obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.CalendarIdentifier = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_CalendarView_IsGroupLabelVisible(global::Microsoft.UI.Xaml.Controls.CalendarView obj, global::System.Boolean value)
            {
                obj.IsGroupLabelVisible = value;
            }
            public static void Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(global::WinUIFasYmmApp.ControlExampleSubstitution obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Value = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_CalendarView_IsOutOfScopeEnabled(global::Microsoft.UI.Xaml.Controls.CalendarView obj, global::System.Boolean value)
            {
                obj.IsOutOfScopeEnabled = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class CalendarViewPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ICalendarViewPage_Bindings
        {
            private global::WinUIFasYmmApp.ControlPages.CalendarViewPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.CalendarView obj3;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj9;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj10;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj11;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj12;
            private global::WinUIFasYmmApp.ControlExampleSubstitution obj13;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3CalendarIdentifierDisabled = false;
            private static bool isobj3IsGroupLabelVisibleDisabled = false;
            private static bool isobj3IsOutOfScopeEnabledDisabled = false;
            private static bool isobj9ValueDisabled = false;
            private static bool isobj10ValueDisabled = false;
            private static bool isobj11ValueDisabled = false;
            private static bool isobj12ValueDisabled = false;
            private static bool isobj13ValueDisabled = false;

            private CalendarViewPage_obj1_BindingsTracking bindingsTracking;

            public CalendarViewPage_obj1_Bindings()
            {
                this.bindingsTracking = new CalendarViewPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 16 && columnNumber == 17)
                {
                    isobj3CalendarIdentifierDisabled = true;
                }
                else if (lineNumber == 17 && columnNumber == 17)
                {
                    isobj3IsGroupLabelVisibleDisabled = true;
                }
                else if (lineNumber == 18 && columnNumber == 17)
                {
                    isobj3IsOutOfScopeEnabledDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 71)
                {
                    isobj9ValueDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 77)
                {
                    isobj10ValueDisabled = true;
                }
                else if (lineNumber == 58 && columnNumber == 77)
                {
                    isobj11ValueDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 66)
                {
                    isobj12ValueDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 76)
                {
                    isobj13ValueDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // ControlPages\CalendarViewPage.xaml line 13
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarView>(target);
                        break;
                    case 9: // ControlPages\CalendarViewPage.xaml line 56
                        this.obj9 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 10: // ControlPages\CalendarViewPage.xaml line 57
                        this.obj10 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 11: // ControlPages\CalendarViewPage.xaml line 58
                        this.obj11 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 12: // ControlPages\CalendarViewPage.xaml line 59
                        this.obj12 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    case 13: // ControlPages\CalendarViewPage.xaml line 60
                        this.obj13 = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExampleSubstitution>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICalendarViewPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlPages.CalendarViewPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::WinUIFasYmmApp.ControlPages.CalendarViewPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_calendarIdentifier(obj.calendarIdentifier, phase);
                        this.Update_isGroupLabelVisible(obj.isGroupLabelVisible, phase);
                        this.Update_isOutOfScopeEnabled(obj.isOutOfScopeEnabled, phase);
                        this.Update_selectionMode(obj.selectionMode, phase);
                        this.Update_Control1(obj.Control1, phase);
                    }
                }
            }
            private void Update_calendarIdentifier(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_calendarIdentifier(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_calendarIdentifier_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_calendarIdentifier_SelectedValue(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\CalendarViewPage.xaml line 13
                    if (!isobj3CalendarIdentifierDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_CalendarView_CalendarIdentifier(this.obj3, (global::System.String)obj, null);
                    }
                }
            }
            private void Update_isGroupLabelVisible(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_isGroupLabelVisible(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_isGroupLabelVisible_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_isGroupLabelVisible_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_isGroupLabelVisible_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_isGroupLabelVisible_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\CalendarViewPage.xaml line 13
                    if (!isobj3IsGroupLabelVisibleDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_CalendarView_IsGroupLabelVisible(this.obj3, obj);
                    }
                    // ControlPages\CalendarViewPage.xaml line 57
                    if (!isobj10ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj10, obj, null);
                    }
                }
            }
            private void Update_isOutOfScopeEnabled(global::Microsoft.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_isOutOfScopeEnabled(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_isOutOfScopeEnabled_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_isOutOfScopeEnabled_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_isOutOfScopeEnabled_IsChecked_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_isOutOfScopeEnabled_IsChecked_Value(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\CalendarViewPage.xaml line 13
                    if (!isobj3IsOutOfScopeEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_CalendarView_IsOutOfScopeEnabled(this.obj3, obj);
                    }
                    // ControlPages\CalendarViewPage.xaml line 58
                    if (!isobj11ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj11, obj, null);
                    }
                }
            }
            private void Update_selectionMode(global::Microsoft.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_selectionMode(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_selectionMode_SelectedValue(obj.SelectedValue, phase);
                    }
                }
            }
            private void Update_selectionMode_SelectedValue(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\CalendarViewPage.xaml line 56
                    if (!isobj9ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj9, obj, null);
                    }
                }
            }
            private void Update_Control1(global::Microsoft.UI.Xaml.Controls.CalendarView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Control1(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Control1_Language(obj.Language, phase);
                        this.Update_Control1_CalendarIdentifier(obj.CalendarIdentifier, phase);
                    }
                }
            }
            private void Update_Control1_Language(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\CalendarViewPage.xaml line 59
                    if (!isobj12ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj12, obj, null);
                    }
                }
            }
            private void Update_Control1_CalendarIdentifier(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // ControlPages\CalendarViewPage.xaml line 60
                    if (!isobj13ValueDisabled)
                    {
                        XamlBindingSetters.Set_WinUIFasYmmApp_ControlExampleSubstitution_Value(this.obj13, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class CalendarViewPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<CalendarViewPage_obj1_Bindings> weakRefToBindingObj; 

                public CalendarViewPage_obj1_BindingsTracking(CalendarViewPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<CalendarViewPage_obj1_Bindings>(obj);
                }

                public CalendarViewPage_obj1_Bindings TryGetBindingObject()
                {
                    CalendarViewPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_calendarIdentifier(null);
                    UpdateChildListeners_isGroupLabelVisible(null);
                    UpdateChildListeners_isOutOfScopeEnabled(null);
                    UpdateChildListeners_selectionMode(null);
                    UpdateChildListeners_Control1(null);
                }

                public void DependencyPropertyChanged_calendarIdentifier_SelectedValue(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    CalendarViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_calendarIdentifier_SelectedValue(obj.SelectedValue, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_calendarIdentifier = null;
                private long tokenDPC_calendarIdentifier_SelectedValue = 0;
                public void UpdateChildListeners_calendarIdentifier(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_calendarIdentifier)
                    {
                        if (cache_calendarIdentifier != null)
                        {
                            cache_calendarIdentifier.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, tokenDPC_calendarIdentifier_SelectedValue);
                            cache_calendarIdentifier = null;
                        }
                        if (obj != null)
                        {
                            cache_calendarIdentifier = obj;
                            tokenDPC_calendarIdentifier_SelectedValue = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, DependencyPropertyChanged_calendarIdentifier_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_isGroupLabelVisible_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    CalendarViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_isGroupLabelVisible_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_isGroupLabelVisible = null;
                private long tokenDPC_isGroupLabelVisible_IsChecked = 0;
                public void UpdateChildListeners_isGroupLabelVisible(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_isGroupLabelVisible)
                    {
                        if (cache_isGroupLabelVisible != null)
                        {
                            cache_isGroupLabelVisible.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_isGroupLabelVisible_IsChecked);
                            cache_isGroupLabelVisible = null;
                        }
                        if (obj != null)
                        {
                            cache_isGroupLabelVisible = obj;
                            tokenDPC_isGroupLabelVisible_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_isGroupLabelVisible_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_isOutOfScopeEnabled_IsChecked(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    CalendarViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CheckBox obj = sender as global::Microsoft.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_isOutOfScopeEnabled_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CheckBox cache_isOutOfScopeEnabled = null;
                private long tokenDPC_isOutOfScopeEnabled_IsChecked = 0;
                public void UpdateChildListeners_isOutOfScopeEnabled(global::Microsoft.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_isOutOfScopeEnabled)
                    {
                        if (cache_isOutOfScopeEnabled != null)
                        {
                            cache_isOutOfScopeEnabled.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_isOutOfScopeEnabled_IsChecked);
                            cache_isOutOfScopeEnabled = null;
                        }
                        if (obj != null)
                        {
                            cache_isOutOfScopeEnabled = obj;
                            tokenDPC_isOutOfScopeEnabled_IsChecked = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_isOutOfScopeEnabled_IsChecked);
                        }
                    }
                }
                public void DependencyPropertyChanged_selectionMode_SelectedValue(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    CalendarViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ComboBox obj = sender as global::Microsoft.UI.Xaml.Controls.ComboBox;
                        if (obj != null)
                        {
                            bindings.Update_selectionMode_SelectedValue(obj.SelectedValue, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ComboBox cache_selectionMode = null;
                private long tokenDPC_selectionMode_SelectedValue = 0;
                public void UpdateChildListeners_selectionMode(global::Microsoft.UI.Xaml.Controls.ComboBox obj)
                {
                    if (obj != cache_selectionMode)
                    {
                        if (cache_selectionMode != null)
                        {
                            cache_selectionMode.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, tokenDPC_selectionMode_SelectedValue);
                            cache_selectionMode = null;
                        }
                        if (obj != null)
                        {
                            cache_selectionMode = obj;
                            tokenDPC_selectionMode_SelectedValue = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, DependencyPropertyChanged_selectionMode_SelectedValue);
                        }
                    }
                }
                public void DependencyPropertyChanged_Control1_Language(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    CalendarViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CalendarView obj = sender as global::Microsoft.UI.Xaml.Controls.CalendarView;
                        if (obj != null)
                        {
                            bindings.Update_Control1_Language(obj.Language, DATA_CHANGED);
                        }
                    }
                }
                public void DependencyPropertyChanged_Control1_CalendarIdentifier(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    CalendarViewPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.CalendarView obj = sender as global::Microsoft.UI.Xaml.Controls.CalendarView;
                        if (obj != null)
                        {
                            bindings.Update_Control1_CalendarIdentifier(obj.CalendarIdentifier, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.CalendarView cache_Control1 = null;
                private long tokenDPC_Control1_Language = 0;
                private long tokenDPC_Control1_CalendarIdentifier = 0;
                public void UpdateChildListeners_Control1(global::Microsoft.UI.Xaml.Controls.CalendarView obj)
                {
                    if (obj != cache_Control1)
                    {
                        if (cache_Control1 != null)
                        {
                            cache_Control1.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.FrameworkElement.LanguageProperty, tokenDPC_Control1_Language);
                            cache_Control1.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.CalendarView.CalendarIdentifierProperty, tokenDPC_Control1_CalendarIdentifier);
                            cache_Control1 = null;
                        }
                        if (obj != null)
                        {
                            cache_Control1 = obj;
                            tokenDPC_Control1_Language = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.FrameworkElement.LanguageProperty, DependencyPropertyChanged_Control1_Language);
                            tokenDPC_Control1_CalendarIdentifier = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.CalendarView.CalendarIdentifierProperty, DependencyPropertyChanged_Control1_CalendarIdentifier);
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // ControlPages\CalendarViewPage.xaml line 11
                {
                    this.ExampleAccessories = global::WinRT.CastExtensions.As<global::WinUIFasYmmApp.ControlExample>(target);
                }
                break;
            case 3: // ControlPages\CalendarViewPage.xaml line 13
                {
                    this.Control1 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CalendarView>(target);
                }
                break;
            case 4: // ControlPages\CalendarViewPage.xaml line 23
                {
                    this.isGroupLabelVisible = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 5: // ControlPages\CalendarViewPage.xaml line 24
                {
                    this.isOutOfScopeEnabled = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 6: // ControlPages\CalendarViewPage.xaml line 25
                {
                    this.selectionMode = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.selectionMode).SelectionChanged += this.SelectionMode_SelectionChanged;
                }
                break;
            case 7: // ControlPages\CalendarViewPage.xaml line 36
                {
                    this.calendarIdentifier = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            case 8: // ControlPages\CalendarViewPage.xaml line 38
                {
                    this.calendarLanguages = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)this.calendarLanguages).SelectionChanged += this.calendarLanguages_SelectionChanged;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // ControlPages\CalendarViewPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    CalendarViewPage_obj1_Bindings bindings = new CalendarViewPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

